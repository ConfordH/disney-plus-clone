{"ast":null,"code":"import createNextState, { isDraft, current, isDraftable, enableES5 } from 'immer';\nexport { default as createNextState, current, freeze, isDraft, original } from 'immer';\nimport { compose, combineReducers, applyMiddleware, createStore } from 'redux';\nexport * from 'redux';\nimport { createSelector } from 'reselect';\nexport { createSelector } from 'reselect';\nimport thunkMiddleware from 'redux-thunk';\n\n/**\r\n * \"Draft-Safe\" version of `reselect`'s `createSelector`:\r\n * If an `immer`-drafted object is passed into the resulting selector's first argument,\r\n * the selector will act on the current draft value, instead of returning a cached value\r\n * that might be possibly outdated if the draft has been modified since.\r\n * @public\r\n */\n\nvar createDraftSafeSelector = function createDraftSafeSelector() {\n  var selector = createSelector.apply(void 0, arguments);\n  var wrappedSelector = function wrappedSelector(value) {\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    return selector.apply(void 0, [isDraft(value) ? current(value) : value].concat(rest));\n  };\n  return wrappedSelector;\n};\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\n\n/**\r\n * @public\r\n */\n\nvar composeWithDevTools = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {\n  if (arguments.length === 0) return undefined;\n  if (typeof arguments[0] === 'object') return compose;\n  return compose.apply(null, arguments);\n};\n\n/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * prototype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n *\r\n * @public\r\n */\nfunction isPlainObject(value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(value) === proto;\n}\nfunction getTimeMeasureUtils(maxDelay, fnName) {\n  var elapsed = 0;\n  return {\n    measureTime: function measureTime(fn) {\n      var started = Date.now();\n      try {\n        return fn();\n      } finally {\n        var finished = Date.now();\n        elapsed += finished - started;\n      }\n    },\n    warnIfExceeded: function warnIfExceeded() {\n      if (elapsed > maxDelay) {\n        console.warn(fnName + \" took \" + elapsed + \"ms, which is more than the warning threshold of \" + maxDelay + \"ms. \\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\\nIt is disabled in production builds, so you don't need to worry about that.\");\n      }\n    }\n  };\n}\n/**\r\n * @public\r\n */\n\nvar MiddlewareArray = /*#__PURE__*/\nfunction (_Array) {\n  _inheritsLoose(MiddlewareArray, _Array);\n  function MiddlewareArray() {\n    return _Array.apply(this, arguments) || this;\n  }\n  var _proto = MiddlewareArray.prototype;\n  _proto.concat = function concat() {\n    var _Array$prototype$conc;\n    for (var _len = arguments.length, arr = new Array(_len), _key = 0; _key < _len; _key++) {\n      arr[_key] = arguments[_key];\n    }\n    return _construct(MiddlewareArray, (_Array$prototype$conc = _Array.prototype.concat).call.apply(_Array$prototype$conc, [this].concat(arr)));\n  };\n  _proto.prepend = function prepend() {\n    for (var _len2 = arguments.length, arr = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      arr[_key2] = arguments[_key2];\n    }\n    if (arr.length === 1 && Array.isArray(arr[0])) {\n      return _construct(MiddlewareArray, arr[0].concat(this));\n    }\n    return _construct(MiddlewareArray, arr.concat(this));\n  };\n  return MiddlewareArray;\n}( /*#__PURE__*/\n_wrapNativeSuper(Array));\nvar isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed'; // Throw an error if the condition fails\n// Strip out error messages for production\n// > Not providing an inline default argument for message as the result is smaller\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  } // Condition not passed\n  // In production we strip the message but still throw\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } // When not in production we allow the message to pass through\n  // *This block will be removed in production builds*\n\n  throw new Error(prefix + \": \" + (message || ''));\n}\nfunction stringify(obj, serializer, indent, decycler) {\n  return JSON.stringify(obj, getSerialize(serializer, decycler), indent);\n}\nfunction getSerialize(serializer, decycler) {\n  var stack = [],\n    keys = [];\n  if (!decycler) decycler = function decycler(_, value) {\n    if (stack[0] === value) return '[Circular ~]';\n    return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n  };\n  return function (key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this);\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n      if (~stack.indexOf(value)) value = decycler.call(this, key, value);\n    } else stack.push(value);\n    return serializer == null ? value : serializer.call(this, key, value);\n  };\n}\n/**\r\n * The default `isImmutable` function.\r\n *\r\n * @public\r\n */\n\nfunction isImmutableDefault(value) {\n  return typeof value !== 'object' || value === null || typeof value === 'undefined' || Object.isFrozen(value);\n}\nfunction trackForMutations(isImmutable, ignorePaths, obj) {\n  var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);\n  return {\n    detectMutations: function detectMutations() {\n      return _detectMutations(isImmutable, ignorePaths, trackedProperties, obj);\n    }\n  };\n}\nfunction trackProperties(isImmutable, ignorePaths, obj, path) {\n  if (ignorePaths === void 0) {\n    ignorePaths = [];\n  }\n  if (path === void 0) {\n    path = '';\n  }\n  var tracked = {\n    value: obj\n  };\n  if (!isImmutable(obj)) {\n    tracked.children = {};\n    for (var key in obj) {\n      var childPath = path ? path + '.' + key : key;\n      if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\n        continue;\n      }\n      tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);\n    }\n  }\n  return tracked;\n}\nfunction _detectMutations(isImmutable, ignorePaths, trackedProperty, obj, sameParentRef, path) {\n  if (ignorePaths === void 0) {\n    ignorePaths = [];\n  }\n  if (sameParentRef === void 0) {\n    sameParentRef = false;\n  }\n  if (path === void 0) {\n    path = '';\n  }\n  var prevObj = trackedProperty ? trackedProperty.value : undefined;\n  var sameRef = prevObj === obj;\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\n    return {\n      wasMutated: true,\n      path: path\n    };\n  }\n  if (isImmutable(prevObj) || isImmutable(obj)) {\n    return {\n      wasMutated: false\n    };\n  } // Gather all keys from prev (tracked) and after objs\n\n  var keysToDetect = {};\n  for (var key in trackedProperty.children) {\n    keysToDetect[key] = true;\n  }\n  for (var _key in obj) {\n    keysToDetect[_key] = true;\n  }\n  for (var _key2 in keysToDetect) {\n    var childPath = path ? path + '.' + _key2 : _key2;\n    if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\n      continue;\n    }\n    var result = _detectMutations(isImmutable, ignorePaths, trackedProperty.children[_key2], obj[_key2], sameRef, childPath);\n    if (result.wasMutated) {\n      return result;\n    }\n  }\n  return {\n    wasMutated: false\n  };\n}\n/**\r\n * Creates a middleware that checks whether any state was mutated in between\r\n * dispatches or during a dispatch. If any mutations are detected, an error is\r\n * thrown.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\n\nfunction createImmutableStateInvariantMiddleware(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return function (next) {\n        return function (action) {\n          return next(action);\n        };\n      };\n    };\n  }\n  var _options = options,\n    _options$isImmutable = _options.isImmutable,\n    isImmutable = _options$isImmutable === void 0 ? isImmutableDefault : _options$isImmutable,\n    ignoredPaths = _options.ignoredPaths,\n    _options$warnAfter = _options.warnAfter,\n    warnAfter = _options$warnAfter === void 0 ? 32 : _options$warnAfter,\n    ignore = _options.ignore; // Alias ignore->ignoredPaths, but prefer ignoredPaths if present\n\n  ignoredPaths = ignoredPaths || ignore;\n  var track = trackForMutations.bind(null, isImmutable, ignoredPaths);\n  return function (_ref) {\n    var getState = _ref.getState;\n    var state = getState();\n    var tracker = track(state);\n    var result;\n    return function (next) {\n      return function (action) {\n        var measureUtils = getTimeMeasureUtils(warnAfter, 'ImmutableStateInvariantMiddleware');\n        measureUtils.measureTime(function () {\n          state = getState();\n          result = tracker.detectMutations(); // Track before potentially not meeting the invariant\n\n          tracker = track(state);\n          !!result.wasMutated ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"A state mutation was detected between dispatches, in the path '\" + (result.path || '') + \"'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)\") : invariant(false) : void 0;\n        });\n        var dispatchedAction = next(action);\n        measureUtils.measureTime(function () {\n          state = getState();\n          result = tracker.detectMutations(); // Track before potentially not meeting the invariant\n\n          tracker = track(state);\n          result.wasMutated && (!!result.wasMutated ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"A state mutation was detected inside a dispatch, in the path: \" + (result.path || '') + \". Take a look at the reducer(s) handling the action \" + stringify(action) + \". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)\") : invariant(false) : void 0);\n        });\n        measureUtils.warnIfExceeded();\n        return dispatchedAction;\n      };\n    };\n  };\n}\n\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n *\r\n * @public\r\n */\n\nfunction isPlain(val) {\n  var type = typeof val;\n  return type === 'undefined' || val === null || type === 'string' || type === 'boolean' || type === 'number' || Array.isArray(val) || isPlainObject(val);\n}\n/**\r\n * @public\r\n */\n\nfunction findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths) {\n  if (path === void 0) {\n    path = '';\n  }\n  if (isSerializable === void 0) {\n    isSerializable = isPlain;\n  }\n  if (ignoredPaths === void 0) {\n    ignoredPaths = [];\n  }\n  var foundNestedSerializable;\n  if (!isSerializable(value)) {\n    return {\n      keyPath: path || '<root>',\n      value: value\n    };\n  }\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  var entries = getEntries != null ? getEntries(value) : Object.entries(value);\n  var hasIgnoredPaths = ignoredPaths.length > 0;\n  for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n    var _ref2 = _ref,\n      key = _ref2[0],\n      nestedValue = _ref2[1];\n    var nestedPath = path ? path + '.' + key : key; // path.concat(property)\n\n    if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {\n      continue;\n    }\n    if (!isSerializable(nestedValue)) {\n      return {\n        keyPath: nestedPath,\n        value: nestedValue\n      };\n    }\n    if (typeof nestedValue === 'object') {\n      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths);\n      if (foundNestedSerializable) {\n        return foundNestedSerializable;\n      }\n    }\n  }\n  return false;\n}\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\n\nfunction createSerializableStateInvariantMiddleware(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return function (next) {\n        return function (action) {\n          return next(action);\n        };\n      };\n    };\n  }\n  var _options = options,\n    _options$isSerializab = _options.isSerializable,\n    isSerializable = _options$isSerializab === void 0 ? isPlain : _options$isSerializab,\n    getEntries = _options.getEntries,\n    _options$ignoredActio = _options.ignoredActions,\n    ignoredActions = _options$ignoredActio === void 0 ? [] : _options$ignoredActio,\n    _options$ignoredActio2 = _options.ignoredActionPaths,\n    ignoredActionPaths = _options$ignoredActio2 === void 0 ? ['meta.arg'] : _options$ignoredActio2,\n    _options$ignoredPaths = _options.ignoredPaths,\n    ignoredPaths = _options$ignoredPaths === void 0 ? [] : _options$ignoredPaths,\n    _options$warnAfter = _options.warnAfter,\n    warnAfter = _options$warnAfter === void 0 ? 32 : _options$warnAfter,\n    _options$ignoreState = _options.ignoreState,\n    ignoreState = _options$ignoreState === void 0 ? false : _options$ignoreState;\n  return function (storeAPI) {\n    return function (next) {\n      return function (action) {\n        if (ignoredActions.length && ignoredActions.indexOf(action.type) !== -1) {\n          return next(action);\n        }\n        var measureUtils = getTimeMeasureUtils(warnAfter, 'SerializableStateInvariantMiddleware');\n        measureUtils.measureTime(function () {\n          var foundActionNonSerializableValue = findNonSerializableValue(action, '', isSerializable, getEntries, ignoredActionPaths);\n          if (foundActionNonSerializableValue) {\n            var keyPath = foundActionNonSerializableValue.keyPath,\n              value = foundActionNonSerializableValue.value;\n            console.error(\"A non-serializable value was detected in an action, in the path: `\" + keyPath + \"`. Value:\", value, '\\nTake a look at the logic that dispatched this action: ', action, '\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)', '\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)');\n          }\n        });\n        var result = next(action);\n        if (!ignoreState) {\n          measureUtils.measureTime(function () {\n            var state = storeAPI.getState();\n            var foundStateNonSerializableValue = findNonSerializableValue(state, '', isSerializable, getEntries, ignoredPaths);\n            if (foundStateNonSerializableValue) {\n              var keyPath = foundStateNonSerializableValue.keyPath,\n                value = foundStateNonSerializableValue.value;\n              console.error(\"A non-serializable value was detected in the state, in the path: `\" + keyPath + \"`. Value:\", value, \"\\nTake a look at the reducer(s) handling this action type: \" + action.type + \".\\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)\");\n            }\n          });\n          measureUtils.warnIfExceeded();\n        }\n        return result;\n      };\n    };\n  };\n}\nfunction isBoolean(x) {\n  return typeof x === 'boolean';\n}\nfunction curryGetDefaultMiddleware() {\n  return function curriedGetDefaultMiddleware(options) {\n    return getDefaultMiddleware(options);\n  };\n}\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n */\n\nfunction getDefaultMiddleware(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    _options$thunk = _options.thunk,\n    thunk = _options$thunk === void 0 ? true : _options$thunk,\n    _options$immutableChe = _options.immutableCheck,\n    immutableCheck = _options$immutableChe === void 0 ? true : _options$immutableChe,\n    _options$serializable = _options.serializableCheck,\n    serializableCheck = _options$serializable === void 0 ? true : _options$serializable;\n  var middlewareArray = new MiddlewareArray();\n  if (thunk) {\n    if (isBoolean(thunk)) {\n      middlewareArray.push(thunkMiddleware);\n    } else {\n      middlewareArray.push(thunkMiddleware.withExtraArgument(thunk.extraArgument));\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (immutableCheck) {\n      /* PROD_START_REMOVE_UMD */\n      var immutableOptions = {};\n      if (!isBoolean(immutableCheck)) {\n        immutableOptions = immutableCheck;\n      }\n      middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));\n      /* PROD_STOP_REMOVE_UMD */\n    }\n    if (serializableCheck) {\n      var serializableOptions = {};\n      if (!isBoolean(serializableCheck)) {\n        serializableOptions = serializableCheck;\n      }\n      middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));\n    }\n  }\n  return middlewareArray;\n}\nvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\n\nfunction configureStore(options) {\n  var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();\n  var _ref = options || {},\n    _ref$reducer = _ref.reducer,\n    reducer = _ref$reducer === void 0 ? undefined : _ref$reducer,\n    _ref$middleware = _ref.middleware,\n    middleware = _ref$middleware === void 0 ? curriedGetDefaultMiddleware() : _ref$middleware,\n    _ref$devTools = _ref.devTools,\n    devTools = _ref$devTools === void 0 ? true : _ref$devTools,\n    _ref$preloadedState = _ref.preloadedState,\n    preloadedState = _ref$preloadedState === void 0 ? undefined : _ref$preloadedState,\n    _ref$enhancers = _ref.enhancers,\n    enhancers = _ref$enhancers === void 0 ? undefined : _ref$enhancers;\n  var rootReducer;\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = combineReducers(reducer);\n  } else {\n    throw new Error('\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\n  }\n  var middlewareEnhancer = applyMiddleware.apply(void 0, typeof middleware === 'function' ? middleware(curriedGetDefaultMiddleware) : middleware);\n  var finalCompose = compose;\n  if (devTools) {\n    finalCompose = composeWithDevTools(_extends({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: !IS_PRODUCTION\n    }, typeof devTools === 'object' && devTools));\n  }\n  var storeEnhancers = [middlewareEnhancer];\n  if (Array.isArray(enhancers)) {\n    storeEnhancers = [middlewareEnhancer].concat(enhancers);\n  } else if (typeof enhancers === 'function') {\n    storeEnhancers = enhancers(storeEnhancers);\n  }\n  var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);\n  return createStore(rootReducer, preloadedState, composedEnhancer);\n}\nfunction createAction(type, prepareAction) {\n  function actionCreator() {\n    if (prepareAction) {\n      var prepared = prepareAction.apply(void 0, arguments);\n      if (!prepared) {\n        throw new Error('prepareAction did not return an object');\n      }\n      return _extends({\n        type: type,\n        payload: prepared.payload\n      }, 'meta' in prepared && {\n        meta: prepared.meta\n      }, {}, 'error' in prepared && {\n        error: prepared.error\n      });\n    }\n    return {\n      type: type,\n      payload: arguments.length <= 0 ? undefined : arguments[0]\n    };\n  }\n  actionCreator.toString = function () {\n    return \"\" + type;\n  };\n  actionCreator.type = type;\n  actionCreator.match = function (action) {\n    return action.type === type;\n  };\n  return actionCreator;\n}\nfunction isFSA(action) {\n  return isPlainObject(action) && typeof action.type === 'string' && Object.keys(action).every(isValidKey);\n}\nfunction isValidKey(key) {\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1;\n}\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\n\nfunction getType(actionCreator) {\n  return \"\" + actionCreator;\n}\nfunction executeReducerBuilderCallback(builderCallback) {\n  var actionsMap = {};\n  var actionMatchers = [];\n  var defaultCaseReducer;\n  var builder = {\n    addCase: function addCase(typeOrActionCreator, reducer) {\n      if (process.env.NODE_ENV !== 'production') {\n        /*\r\n         to keep the definition by the user in line with actual behavior,\r\n         we enforce `addCase` to always be called before calling `addMatcher`\r\n         as matching cases take precedence over matchers\r\n         */\n        if (actionMatchers.length > 0) {\n          throw new Error('`builder.addCase` should only be called before calling `builder.addMatcher`');\n        }\n        if (defaultCaseReducer) {\n          throw new Error('`builder.addCase` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n      var type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n      if (type in actionsMap) {\n        throw new Error('addCase cannot be called with two reducers for the same action type');\n      }\n      actionsMap[type] = reducer;\n      return builder;\n    },\n    addMatcher: function addMatcher(matcher, reducer) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error('`builder.addMatcher` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n      actionMatchers.push({\n        matcher: matcher,\n        reducer: reducer\n      });\n      return builder;\n    },\n    addDefaultCase: function addDefaultCase(reducer) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error('`builder.addDefaultCase` can only be called once');\n        }\n      }\n      defaultCaseReducer = reducer;\n      return builder;\n    }\n  };\n  builderCallback(builder);\n  return [actionsMap, actionMatchers, defaultCaseReducer];\n}\nfunction createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {\n  if (actionMatchers === void 0) {\n    actionMatchers = [];\n  }\n  var _ref = typeof mapOrBuilderCallback === 'function' ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer],\n    actionsMap = _ref[0],\n    finalActionMatchers = _ref[1],\n    finalDefaultCaseReducer = _ref[2];\n  var frozenInitialState = createNextState(initialState, function () {});\n  return function (state, action) {\n    if (state === void 0) {\n      state = frozenInitialState;\n    }\n    var caseReducers = [actionsMap[action.type]].concat(finalActionMatchers.filter(function (_ref2) {\n      var matcher = _ref2.matcher;\n      return matcher(action);\n    }).map(function (_ref3) {\n      var reducer = _ref3.reducer;\n      return reducer;\n    }));\n    if (caseReducers.filter(function (cr) {\n      return !!cr;\n    }).length === 0) {\n      caseReducers = [finalDefaultCaseReducer];\n    }\n    return caseReducers.reduce(function (previousState, caseReducer) {\n      if (caseReducer) {\n        if (isDraft(previousState)) {\n          // If it's already a draft, we must already be inside a `createNextState` call,\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\n          var draft = previousState; // We can assume this is already a draft\n\n          var result = caseReducer(draft, action);\n          if (typeof result === 'undefined') {\n            return previousState;\n          }\n          return result;\n        } else if (!isDraftable(previousState)) {\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\n          // return the caseReducer func and not wrap it with produce.\n          var _result = caseReducer(previousState, action);\n          if (typeof _result === 'undefined') {\n            if (previousState === null) {\n              return previousState;\n            }\n            throw Error('A case reducer on a non-draftable value must not return undefined');\n          }\n          return _result;\n        } else {\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n          // these two types.\n          return createNextState(previousState, function (draft) {\n            return caseReducer(draft, action);\n          });\n        }\n      }\n      return previousState;\n    }, state);\n  };\n}\nfunction getType$1(slice, actionKey) {\n  return slice + \"/\" + actionKey;\n}\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\n\nfunction createSlice(options) {\n  var name = options.name,\n    initialState = options.initialState;\n  if (!name) {\n    throw new Error('`name` is a required option for createSlice');\n  }\n  var reducers = options.reducers || {};\n  var _ref = typeof options.extraReducers === 'undefined' ? [] : typeof options.extraReducers === 'function' ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers],\n    _ref$ = _ref[0],\n    extraReducers = _ref$ === void 0 ? {} : _ref$,\n    _ref$2 = _ref[1],\n    actionMatchers = _ref$2 === void 0 ? [] : _ref$2,\n    _ref$3 = _ref[2],\n    defaultCaseReducer = _ref$3 === void 0 ? undefined : _ref$3;\n  var reducerNames = Object.keys(reducers);\n  var sliceCaseReducersByName = {};\n  var sliceCaseReducersByType = {};\n  var actionCreators = {};\n  reducerNames.forEach(function (reducerName) {\n    var maybeReducerWithPrepare = reducers[reducerName];\n    var type = getType$1(name, reducerName);\n    var caseReducer;\n    var prepareCallback;\n    if ('reducer' in maybeReducerWithPrepare) {\n      caseReducer = maybeReducerWithPrepare.reducer;\n      prepareCallback = maybeReducerWithPrepare.prepare;\n    } else {\n      caseReducer = maybeReducerWithPrepare;\n    }\n    sliceCaseReducersByName[reducerName] = caseReducer;\n    sliceCaseReducersByType[type] = caseReducer;\n    actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);\n  });\n  var finalCaseReducers = _extends({}, extraReducers, {}, sliceCaseReducersByType);\n  var reducer = createReducer(initialState, finalCaseReducers, actionMatchers, defaultCaseReducer);\n  return {\n    name: name,\n    reducer: reducer,\n    actions: actionCreators,\n    caseReducers: sliceCaseReducersByName\n  };\n}\nfunction getInitialEntityState() {\n  return {\n    ids: [],\n    entities: {}\n  };\n}\nfunction createInitialStateFactory() {\n  function getInitialState(additionalState) {\n    if (additionalState === void 0) {\n      additionalState = {};\n    }\n    return Object.assign(getInitialEntityState(), additionalState);\n  }\n  return {\n    getInitialState: getInitialState\n  };\n}\nfunction createSelectorsFactory() {\n  function getSelectors(selectState) {\n    var selectIds = function selectIds(state) {\n      return state.ids;\n    };\n    var selectEntities = function selectEntities(state) {\n      return state.entities;\n    };\n    var selectAll = createDraftSafeSelector(selectIds, selectEntities, function (ids, entities) {\n      return ids.map(function (id) {\n        return entities[id];\n      });\n    });\n    var selectId = function selectId(_, id) {\n      return id;\n    };\n    var selectById = function selectById(entities, id) {\n      return entities[id];\n    };\n    var selectTotal = createDraftSafeSelector(selectIds, function (ids) {\n      return ids.length;\n    });\n    if (!selectState) {\n      return {\n        selectIds: selectIds,\n        selectEntities: selectEntities,\n        selectAll: selectAll,\n        selectTotal: selectTotal,\n        selectById: createDraftSafeSelector(selectEntities, selectId, selectById)\n      };\n    }\n    var selectGlobalizedEntities = createDraftSafeSelector(selectState, selectEntities);\n    return {\n      selectIds: createDraftSafeSelector(selectState, selectIds),\n      selectEntities: selectGlobalizedEntities,\n      selectAll: createDraftSafeSelector(selectState, selectAll),\n      selectTotal: createDraftSafeSelector(selectState, selectTotal),\n      selectById: createDraftSafeSelector(selectGlobalizedEntities, selectId, selectById)\n    };\n  }\n  return {\n    getSelectors: getSelectors\n  };\n}\nfunction createSingleArgumentStateOperator(mutator) {\n  var operator = createStateOperator(function (_, state) {\n    return mutator(state);\n  });\n  return function operation(state) {\n    return operator(state, undefined);\n  };\n}\nfunction createStateOperator(mutator) {\n  return function operation(state, arg) {\n    function isPayloadActionArgument(arg) {\n      return isFSA(arg);\n    }\n    var runMutator = function runMutator(draft) {\n      if (isPayloadActionArgument(arg)) {\n        mutator(arg.payload, draft);\n      } else {\n        mutator(arg, draft);\n      }\n    };\n    if (isDraft(state)) {\n      // we must already be inside a `createNextState` call, likely because\n      // this is being wrapped in `createReducer` or `createSlice`.\n      // It's safe to just pass the draft to the mutator.\n      runMutator(state); // since it's a draft, we'll just return it\n\n      return state;\n    } else {\n      // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n      // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n      // these two types.\n      return createNextState(state, runMutator);\n    }\n  };\n}\nfunction selectIdValue(entity, selectId) {\n  var key = selectId(entity);\n  if (process.env.NODE_ENV !== 'production' && key === undefined) {\n    console.warn('The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n  }\n  return key;\n}\nfunction createUnsortedStateAdapter(selectId) {\n  function addOneMutably(entity, state) {\n    var key = selectIdValue(entity, selectId);\n    if (key in state.entities) {\n      return;\n    }\n    state.ids.push(key);\n    state.entities[key] = entity;\n  }\n  function addManyMutably(entities, state) {\n    if (!Array.isArray(entities)) {\n      entities = Object.values(entities);\n    }\n    for (var _iterator = entities, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n      var entity = _ref;\n      addOneMutably(entity, state);\n    }\n  }\n  function setAllMutably(entities, state) {\n    if (!Array.isArray(entities)) {\n      entities = Object.values(entities);\n    }\n    state.ids = [];\n    state.entities = {};\n    addManyMutably(entities, state);\n  }\n  function removeOneMutably(key, state) {\n    return removeManyMutably([key], state);\n  }\n  function removeManyMutably(keys, state) {\n    var didMutate = false;\n    keys.forEach(function (key) {\n      if (key in state.entities) {\n        delete state.entities[key];\n        didMutate = true;\n      }\n    });\n    if (didMutate) {\n      state.ids = state.ids.filter(function (id) {\n        return id in state.entities;\n      });\n    }\n  }\n  function removeAllMutably(state) {\n    Object.assign(state, {\n      ids: [],\n      entities: {}\n    });\n  }\n  function takeNewKey(keys, update, state) {\n    var original = state.entities[update.id];\n    var updated = Object.assign({}, original, update.changes);\n    var newKey = selectIdValue(updated, selectId);\n    var hasNewKey = newKey !== update.id;\n    if (hasNewKey) {\n      keys[update.id] = newKey;\n      delete state.entities[update.id];\n    }\n    state.entities[newKey] = updated;\n    return hasNewKey;\n  }\n  function updateOneMutably(update, state) {\n    return updateManyMutably([update], state);\n  }\n  function updateManyMutably(updates, state) {\n    var newKeys = {};\n    var updatesPerEntity = {};\n    updates.forEach(function (update) {\n      // Only apply updates to entities that currently exist\n      if (update.id in state.entities) {\n        // If there are multiple updates to one entity, merge them together\n        updatesPerEntity[update.id] = {\n          id: update.id,\n          // Spreads ignore falsy values, so this works even if there isn't\n          // an existing update already at this key\n          changes: _extends({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null, {}, update.changes)\n        };\n      }\n    });\n    updates = Object.values(updatesPerEntity);\n    var didMutateEntities = updates.length > 0;\n    if (didMutateEntities) {\n      var didMutateIds = updates.filter(function (update) {\n        return takeNewKey(newKeys, update, state);\n      }).length > 0;\n      if (didMutateIds) {\n        state.ids = state.ids.map(function (id) {\n          return newKeys[id] || id;\n        });\n      }\n    }\n  }\n  function upsertOneMutably(entity, state) {\n    return upsertManyMutably([entity], state);\n  }\n  function upsertManyMutably(entities, state) {\n    if (!Array.isArray(entities)) {\n      entities = Object.values(entities);\n    }\n    var added = [];\n    var updated = [];\n    for (var _iterator2 = entities, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n      var entity = _ref2;\n      var id = selectIdValue(entity, selectId);\n      if (id in state.entities) {\n        updated.push({\n          id: id,\n          changes: entity\n        });\n      } else {\n        added.push(entity);\n      }\n    }\n    updateManyMutably(updated, state);\n    addManyMutably(added, state);\n  }\n  return {\n    removeAll: createSingleArgumentStateOperator(removeAllMutably),\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    setAll: createStateOperator(setAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    upsertMany: createStateOperator(upsertManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably)\n  };\n}\nfunction createSortedStateAdapter(selectId, sort) {\n  var _createUnsortedStateA = createUnsortedStateAdapter(selectId),\n    removeOne = _createUnsortedStateA.removeOne,\n    removeMany = _createUnsortedStateA.removeMany,\n    removeAll = _createUnsortedStateA.removeAll;\n  function addOneMutably(entity, state) {\n    return addManyMutably([entity], state);\n  }\n  function addManyMutably(newModels, state) {\n    if (!Array.isArray(newModels)) {\n      newModels = Object.values(newModels);\n    }\n    var models = newModels.filter(function (model) {\n      return !(selectIdValue(model, selectId) in state.entities);\n    });\n    if (models.length !== 0) {\n      merge(models, state);\n    }\n  }\n  function setAllMutably(models, state) {\n    if (!Array.isArray(models)) {\n      models = Object.values(models);\n    }\n    state.entities = {};\n    state.ids = [];\n    addManyMutably(models, state);\n  }\n  function updateOneMutably(update, state) {\n    return updateManyMutably([update], state);\n  }\n  function takeUpdatedModel(models, update, state) {\n    if (!(update.id in state.entities)) {\n      return false;\n    }\n    var original = state.entities[update.id];\n    var updated = Object.assign({}, original, update.changes);\n    var newKey = selectIdValue(updated, selectId);\n    delete state.entities[update.id];\n    models.push(updated);\n    return newKey !== update.id;\n  }\n  function updateManyMutably(updates, state) {\n    var models = [];\n    updates.forEach(function (update) {\n      return takeUpdatedModel(models, update, state);\n    });\n    if (models.length !== 0) {\n      merge(models, state);\n    }\n  }\n  function upsertOneMutably(entity, state) {\n    return upsertManyMutably([entity], state);\n  }\n  function upsertManyMutably(entities, state) {\n    if (!Array.isArray(entities)) {\n      entities = Object.values(entities);\n    }\n    var added = [];\n    var updated = [];\n    for (var _iterator = entities, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n      var entity = _ref;\n      var id = selectIdValue(entity, selectId);\n      if (id in state.entities) {\n        updated.push({\n          id: id,\n          changes: entity\n        });\n      } else {\n        added.push(entity);\n      }\n    }\n    updateManyMutably(updated, state);\n    addManyMutably(added, state);\n  }\n  function areArraysEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (var i = 0; i < a.length && i < b.length; i++) {\n      if (a[i] === b[i]) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n  function merge(models, state) {\n    models.sort(sort); // Insert/overwrite all new/updated\n\n    models.forEach(function (model) {\n      state.entities[selectId(model)] = model;\n    });\n    var allEntities = Object.values(state.entities);\n    allEntities.sort(sort);\n    var newSortedIds = allEntities.map(selectId);\n    var ids = state.ids;\n    if (!areArraysEqual(ids, newSortedIds)) {\n      state.ids = newSortedIds;\n    }\n  }\n  return {\n    removeOne: removeOne,\n    removeMany: removeMany,\n    removeAll: removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    setAll: createStateOperator(setAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertMany: createStateOperator(upsertManyMutably)\n  };\n}\n\n/**\r\n *\r\n * @param options\r\n *\r\n * @public\r\n */\n\nfunction createEntityAdapter(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _sortComparer$selectI = _extends({\n      sortComparer: false,\n      selectId: function selectId(instance) {\n        return instance.id;\n      }\n    }, options),\n    selectId = _sortComparer$selectI.selectId,\n    sortComparer = _sortComparer$selectI.sortComparer;\n  var stateFactory = createInitialStateFactory();\n  var selectorsFactory = createSelectorsFactory();\n  var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);\n  return _extends({\n    selectId: selectId,\n    sortComparer: sortComparer\n  }, stateFactory, {}, selectorsFactory, {}, stateAdapter);\n}\n\n// A type of promise-like that resolves synchronously and supports only one observer\n\nconst _iteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\";\nconst _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\";\n\n// Asynchronously call a function and send errors to recovery continuation\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n  return result;\n}\n\n// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nvar urlAlphabet = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n/**\r\n *\r\n * @public\r\n */\n\nvar nanoid = function nanoid(size) {\n  if (size === void 0) {\n    size = 21;\n  }\n  var id = ''; // A compact alternative for `for (var i = 0; i < step; i++)`.\n\n  var i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};\nvar commonProperties = ['name', 'message', 'stack', 'code'];\nvar RejectWithValue = function RejectWithValue(payload) {\n  this.payload = payload;\n  this.name = 'RejectWithValue';\n  this.message = 'Rejected';\n}; // Reworked from https://github.com/sindresorhus/serialize-error\n\nvar miniSerializeError = function miniSerializeError(value) {\n  if (typeof value === 'object' && value !== null) {\n    var simpleError = {};\n    for (var _iterator = commonProperties, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n      var property = _ref;\n      if (typeof value[property] === 'string') {\n        simpleError[property] = value[property];\n      }\n    }\n    return simpleError;\n  }\n  return {\n    message: String(value)\n  };\n};\n/**\r\n *\r\n * @param typePrefix\r\n * @param payloadCreator\r\n * @param options\r\n *\r\n * @public\r\n */\n\nfunction createAsyncThunk(typePrefix, payloadCreator, options) {\n  var fulfilled = createAction(typePrefix + '/fulfilled', function (result, requestId, arg) {\n    return {\n      payload: result,\n      meta: {\n        arg: arg,\n        requestId: requestId,\n        requestStatus: 'fulfilled'\n      }\n    };\n  });\n  var pending = createAction(typePrefix + '/pending', function (requestId, arg) {\n    return {\n      payload: undefined,\n      meta: {\n        arg: arg,\n        requestId: requestId,\n        requestStatus: 'pending'\n      }\n    };\n  });\n  var rejected = createAction(typePrefix + '/rejected', function (error, requestId, arg) {\n    var rejectedWithValue = error instanceof RejectWithValue;\n    var aborted = !!error && error.name === 'AbortError';\n    var condition = !!error && error.name === 'ConditionError';\n    return {\n      payload: error instanceof RejectWithValue ? error.payload : undefined,\n      error: (options && options.serializeError || miniSerializeError)(error || 'Rejected'),\n      meta: {\n        arg: arg,\n        requestId: requestId,\n        rejectedWithValue: rejectedWithValue,\n        requestStatus: 'rejected',\n        aborted: aborted,\n        condition: condition\n      }\n    };\n  });\n  var displayedWarning = false;\n  var AC = typeof AbortController !== 'undefined' ? AbortController : /*#__PURE__*/\n  function () {\n    function _class() {\n      this.signal = {\n        aborted: false,\n        addEventListener: function addEventListener() {},\n        dispatchEvent: function dispatchEvent() {\n          return false;\n        },\n        onabort: function onabort() {},\n        removeEventListener: function removeEventListener() {}\n      };\n    }\n    var _proto = _class.prototype;\n    _proto.abort = function abort() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!displayedWarning) {\n          displayedWarning = true;\n          console.info(\"This platform does not implement AbortController. \\nIf you want to use the AbortController to react to `abort` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.\");\n        }\n      }\n    };\n    return _class;\n  }();\n  function actionCreator(arg) {\n    return function (dispatch, getState, extra) {\n      var requestId = nanoid();\n      var abortController = new AC();\n      var abortReason;\n      var abortedPromise = new Promise(function (_, reject) {\n        return abortController.signal.addEventListener('abort', function () {\n          return reject({\n            name: 'AbortError',\n            message: abortReason || 'Aborted'\n          });\n        });\n      });\n      var started = false;\n      function abort(reason) {\n        if (started) {\n          abortReason = reason;\n          abortController.abort();\n        }\n      }\n      var promise = function () {\n        try {\n          var _temp3 = function _temp3(_result) {\n            if (_exit2) return _result;\n            // We dispatch the result action _after_ the catch, to avoid having any errors\n            // here get swallowed by the try/catch block,\n            // per https://twitter.com/dan_abramov/status/770914221638942720\n            // and https://redux-toolkit.js.org/tutorials/advanced-tutorial#async-error-handling-logic-in-thunks\n            var skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;\n            if (!skipDispatch) {\n              dispatch(finalAction);\n            }\n            return finalAction;\n          };\n          var _exit2 = false;\n          var finalAction;\n          var _temp4 = _catch(function () {\n            if (options && options.condition && options.condition(arg, {\n              getState: getState,\n              extra: extra\n            }) === false) {\n              // eslint-disable-next-line no-throw-literal\n              throw {\n                name: 'ConditionError',\n                message: 'Aborted due to condition callback returning false.'\n              };\n            }\n            started = true;\n            dispatch(pending(requestId, arg));\n            return Promise.resolve(Promise.race([abortedPromise, Promise.resolve(payloadCreator(arg, {\n              dispatch: dispatch,\n              getState: getState,\n              extra: extra,\n              requestId: requestId,\n              signal: abortController.signal,\n              rejectWithValue: function rejectWithValue(value) {\n                return new RejectWithValue(value);\n              }\n            })).then(function (result) {\n              if (result instanceof RejectWithValue) {\n                return rejected(result, requestId, arg);\n              }\n              return fulfilled(result, requestId, arg);\n            })])).then(function (_Promise$race) {\n              finalAction = _Promise$race;\n            });\n          }, function (err) {\n            finalAction = rejected(err, requestId, arg);\n          });\n          return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }();\n      return Object.assign(promise, {\n        abort: abort,\n        requestId: requestId,\n        arg: arg\n      });\n    };\n  }\n  return Object.assign(actionCreator, {\n    pending: pending,\n    rejected: rejected,\n    fulfilled: fulfilled,\n    typePrefix: typePrefix\n  });\n}\n/**\r\n * @public\r\n */\n\nfunction unwrapResult(action) {\n  if (action.meta && action.meta.rejectedWithValue) {\n    throw action.payload;\n  }\n  if (action.error) {\n    throw action.error;\n  }\n  return action.payload;\n}\nvar hasMatchFunction = function hasMatchFunction(v) {\n  return v && typeof v.match === 'function';\n};\nvar matches = function matches(matcher, action) {\n  if (hasMatchFunction(matcher)) {\n    return matcher.match(action);\n  } else {\n    return matcher(action);\n  }\n};\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches any one of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\n\nfunction isAnyOf() {\n  for (var _len = arguments.length, matchers = new Array(_len), _key = 0; _key < _len; _key++) {\n    matchers[_key] = arguments[_key];\n  }\n  return function (action) {\n    return matchers.some(function (matcher) {\n      return matches(matcher, action);\n    });\n  };\n}\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches all of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\n\nfunction isAllOf() {\n  for (var _len2 = arguments.length, matchers = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    matchers[_key2] = arguments[_key2];\n  }\n  return function (action) {\n    return matchers.every(function (matcher) {\n      return matches(matcher, action);\n    });\n  };\n}\n/**\r\n * @param action A redux action\r\n * @param validStatus An array of valid meta.requestStatus values\r\n *\r\n * @internal\r\n */\n\nfunction hasExpectedRequestMetadata(action, validStatus) {\n  if (!action || !action.meta) return false;\n  var hasValidRequestId = typeof action.meta.requestId === 'string';\n  var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;\n  return hasValidRequestId && hasValidRequestStatus;\n}\nfunction isAsyncThunkArray(a) {\n  return typeof a[0] === 'function' && 'pending' in a[0] && 'fulfilled' in a[0] && 'rejected' in a[0];\n}\nfunction isPending() {\n  for (var _len3 = arguments.length, asyncThunks = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    asyncThunks[_key3] = arguments[_key3];\n  }\n  if (asyncThunks.length === 0) {\n    return function (action) {\n      return hasExpectedRequestMetadata(action, ['pending']);\n    };\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isPending()(asyncThunks[0]);\n  }\n  return function (action) {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    var matchers = asyncThunks.map(function (asyncThunk) {\n      return asyncThunk.pending;\n    });\n    var combinedMatcher = isAnyOf.apply(void 0, matchers);\n    return combinedMatcher(action);\n  };\n}\nfunction isRejected() {\n  for (var _len4 = arguments.length, asyncThunks = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    asyncThunks[_key4] = arguments[_key4];\n  }\n  if (asyncThunks.length === 0) {\n    return function (action) {\n      return hasExpectedRequestMetadata(action, ['rejected']);\n    };\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejected()(asyncThunks[0]);\n  }\n  return function (action) {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    var matchers = asyncThunks.map(function (asyncThunk) {\n      return asyncThunk.rejected;\n    });\n    var combinedMatcher = isAnyOf.apply(void 0, matchers);\n    return combinedMatcher(action);\n  };\n}\nfunction isRejectedWithValue() {\n  for (var _len5 = arguments.length, asyncThunks = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    asyncThunks[_key5] = arguments[_key5];\n  }\n  var hasFlag = function hasFlag(action) {\n    return action && action.meta && action.meta.rejectedWithValue;\n  };\n  if (asyncThunks.length === 0) {\n    return function (action) {\n      var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);\n      return combinedMatcher(action);\n    };\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejectedWithValue()(asyncThunks[0]);\n  }\n  return function (action) {\n    var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);\n    return combinedMatcher(action);\n  };\n}\nfunction isFulfilled() {\n  for (var _len6 = arguments.length, asyncThunks = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    asyncThunks[_key6] = arguments[_key6];\n  }\n  if (asyncThunks.length === 0) {\n    return function (action) {\n      return hasExpectedRequestMetadata(action, ['fulfilled']);\n    };\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isFulfilled()(asyncThunks[0]);\n  }\n  return function (action) {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    var matchers = asyncThunks.map(function (asyncThunk) {\n      return asyncThunk.fulfilled;\n    });\n    var combinedMatcher = isAnyOf.apply(void 0, matchers);\n    return combinedMatcher(action);\n  };\n}\nfunction isAsyncThunkAction() {\n  for (var _len7 = arguments.length, asyncThunks = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    asyncThunks[_key7] = arguments[_key7];\n  }\n  if (asyncThunks.length === 0) {\n    return function (action) {\n      return hasExpectedRequestMetadata(action, ['pending', 'fulfilled', 'rejected']);\n    };\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isAsyncThunkAction()(asyncThunks[0]);\n  }\n  return function (action) {\n    // note: this type will be correct because we have at least 1 asyncThunk\n    var matchers = [];\n    for (var _iterator = asyncThunks, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n      var asyncThunk = _ref;\n      matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);\n    }\n    var combinedMatcher = isAnyOf.apply(void 0, matchers);\n    return combinedMatcher(action);\n  };\n}\n\n// we assume RTK will be used with React Native and other Proxy-less\n// environments.  In addition, that's how Immer 4 behaved, and since\n// we want to ship this in an RTK minor, we should keep the same behavior.\n\nenableES5();\nexport { MiddlewareArray, configureStore, createAction, createAsyncThunk, createDraftSafeSelector, createEntityAdapter, createImmutableStateInvariantMiddleware, createReducer, createSerializableStateInvariantMiddleware, createSlice, findNonSerializableValue, getDefaultMiddleware, getType, isAllOf, isAnyOf, isAsyncThunkAction, isFulfilled, isImmutableDefault, isPending, isPlain, isPlainObject, isRejected, isRejectedWithValue, nanoid, unwrapResult };","map":{"version":3,"names":["createDraftSafeSelector","selector","createSelector","apply","arguments","wrappedSelector","value","rest","Array","_len","_key","isDraft","current","concat","composeWithDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","length","undefined","compose","isPlainObject","proto","Object","getPrototypeOf","getTimeMeasureUtils","maxDelay","fnName","elapsed","measureTime","fn","started","Date","now","finished","warnIfExceeded","console","warn","MiddlewareArray","_Array","arr","_Array$prototype$conc","prototype","call","prepend","_len2","_key2","isArray","_wrapNativeSuper","isProduction","process","env","NODE_ENV","prefix","invariant","condition","message","Error","stringify","obj","serializer","indent","decycler","JSON","getSerialize","stack","keys","_","slice","indexOf","join","key","thisPos","splice","push","Infinity","isImmutableDefault","isFrozen","trackForMutations","isImmutable","ignorePaths","trackedProperties","trackProperties","detectMutations","_detectMutations","path","tracked","children","childPath","trackedProperty","sameParentRef","prevObj","sameRef","Number","isNaN","wasMutated","keysToDetect","result","createImmutableStateInvariantMiddleware","options","next","action","_options$isImmutable","ignoredPaths","_options","warnAfter","_options$warnAfter","ignore","track","bind","_ref","getState","state","tracker","measureUtils","dispatchedAction","isPlain","val","type","findNonSerializableValue","isSerializable","getEntries","foundNestedSerializable","keyPath","entries","hasIgnoredPaths","_isArray","_iterator","_i","Symbol","iterator","_ref2","nestedValue","nestedPath","createSerializableStateInvariantMiddleware","_options$isSerializab","ignoredActions","_options$ignoredActio","ignoredActionPaths","_options$ignoredActio2","_options$ignoredPaths","ignoreState","_options$ignoreState","storeAPI","foundActionNonSerializableValue","error","foundStateNonSerializableValue","isBoolean","x","curryGetDefaultMiddleware","curriedGetDefaultMiddleware","getDefaultMiddleware","thunk","_options$thunk","immutableCheck","_options$immutableChe","serializableCheck","_options$serializable","middlewareArray","thunkMiddleware","withExtraArgument","extraArgument","immutableOptions","unshift","serializableOptions","IS_PRODUCTION","configureStore","reducer","_ref$reducer","middleware","_ref$middleware","devTools","_ref$devTools","preloadedState","_ref$preloadedState","enhancers","_ref$enhancers","rootReducer","combineReducers","middlewareEnhancer","applyMiddleware","finalCompose","_extends","trace","storeEnhancers","composedEnhancer","createStore","createAction","prepareAction","actionCreator","prepared","payload","meta","toString","match","isFSA","every","isValidKey","getType","executeReducerBuilderCallback","builderCallback","actionsMap","actionMatchers","defaultCaseReducer","builder","addCase","typeOrActionCreator","addMatcher","matcher","addDefaultCase","createReducer","initialState","mapOrBuilderCallback","finalActionMatchers","finalDefaultCaseReducer","frozenInitialState","createNextState","caseReducers","filter","map","_ref3","cr","reduce","previousState","caseReducer","draft","isDraftable","_result","getType$1","actionKey","createSlice","name","reducers","extraReducers","_ref$","_ref$2","_ref$3","reducerNames","sliceCaseReducersByName","sliceCaseReducersByType","actionCreators","forEach","reducerName","maybeReducerWithPrepare","prepareCallback","prepare","finalCaseReducers","actions","getInitialEntityState","ids","entities","createInitialStateFactory","getInitialState","additionalState","assign","createSelectorsFactory","getSelectors","selectState","selectIds","selectEntities","selectAll","id","selectId","selectById","selectTotal","selectGlobalizedEntities","createSingleArgumentStateOperator","mutator","operator","createStateOperator","operation","arg","isPayloadActionArgument","runMutator","selectIdValue","entity","createUnsortedStateAdapter","addOneMutably","addManyMutably","values","setAllMutably","removeOneMutably","removeManyMutably","didMutate","removeAllMutably","takeNewKey","update","original","updated","changes","newKey","hasNewKey","updateOneMutably","updateManyMutably","updates","newKeys","updatesPerEntity","didMutateEntities","didMutateIds","upsertOneMutably","upsertManyMutably","added","_isArray2","_iterator2","_i2","removeAll","addOne","addMany","setAll","updateOne","updateMany","upsertOne","upsertMany","removeOne","removeMany","createSortedStateAdapter","sort","_createUnsortedStateA","newModels","models","model","merge","takeUpdatedModel","areArraysEqual","a","b","i","allEntities","newSortedIds","createEntityAdapter","sortComparer","instance","_sortComparer$selectI","stateFactory","selectorsFactory","stateAdapter","_iteratorSymbol","_asyncIteratorSymbol","asyncIterator","_catch","body","recover","e","then","urlAlphabet","nanoid","size","Math","random","commonProperties","RejectWithValue","miniSerializeError","simpleError","property","String","createAsyncThunk","typePrefix","payloadCreator","fulfilled","requestId","requestStatus","pending","rejected","rejectedWithValue","aborted","serializeError","displayedWarning","AC","AbortController","addEventListener","dispatchEvent","onabort","removeEventListener","abort","info","dispatch","extra","abortController","abortReason","abortedPromise","Promise","reject","signal","reason","promise","skipDispatch","dispatchConditionRejection","finalAction","race","resolve","rejectWithValue","_Promise$race","err","unwrapResult","hasMatchFunction","v","matches","isAnyOf","matchers","some","isAllOf","hasExpectedRequestMetadata","validStatus","hasValidRequestId","hasValidRequestStatus","isAsyncThunkArray","isPending","asyncThunks","_len3","_key3","asyncThunk","combinedMatcher","isRejected","_len4","_key4","isRejectedWithValue","_len5","_key5","hasFlag","isFulfilled","_len6","_key6","isAsyncThunkAction","_len7","_key7","enableES5"],"sources":["C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\createDraftSafeSelector.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\devtoolsExtension.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\isPlainObject.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\utils.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\immutableStateInvariantMiddleware.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\serializableStateInvariantMiddleware.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\getDefaultMiddleware.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\configureStore.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\createAction.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\mapBuilders.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\createReducer.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\entities\\entity_state.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\entities\\state_selectors.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\entities\\state_adapter.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\entities\\utils.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\entities\\unsorted_state_adapter.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\entities\\sorted_state_adapter.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\entities\\create_adapter.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\node_modules\\babel-plugin-transform-async-to-promises\\helpers.js","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\nanoid.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\createAsyncThunk.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\tsHelpers.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\matchers.ts","C:\\Users\\Lenovo\\Desktop\\workspace-h\\disney\\node_modules\\@reduxjs\\toolkit\\src\\index.ts"],"sourcesContent":["import { current, isDraft } from 'immer'\r\nimport { createSelector } from 'reselect'\r\n\r\n/**\r\n * \"Draft-Safe\" version of `reselect`'s `createSelector`:\r\n * If an `immer`-drafted object is passed into the resulting selector's first argument,\r\n * the selector will act on the current draft value, instead of returning a cached value\r\n * that might be possibly outdated if the draft has been modified since.\r\n * @public\r\n */\r\nexport const createDraftSafeSelector: typeof createSelector = (\r\n  ...args: unknown[]\r\n) => {\r\n  const selector = (createSelector as any)(...args)\r\n  const wrappedSelector = (value: unknown, ...rest: unknown[]) =>\r\n    selector(isDraft(value) ? current(value) : value, ...rest)\r\n  return wrappedSelector as any\r\n}\r\n","import { Action, ActionCreator, StoreEnhancer, compose } from 'redux'\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface EnhancerOptions {\r\n  /**\r\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\r\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\r\n   */\r\n  name?: string\r\n  /**\r\n   * action creators functions to be available in the Dispatcher.\r\n   */\r\n  actionCreators?: ActionCreator<any>[] | { [key: string]: ActionCreator<any> }\r\n  /**\r\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\r\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\r\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\r\n   *\r\n   * @default 500 ms.\r\n   */\r\n  latency?: number\r\n  /**\r\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\r\n   *\r\n   * @default 50\r\n   */\r\n  maxAge?: number\r\n  /**\r\n   * See detailed documentation at http://extension.remotedev.io/docs/API/Arguments.html#serialize\r\n   */\r\n  serialize?:\r\n    | boolean\r\n    | {\r\n        options?:\r\n          | boolean\r\n          | {\r\n              date?: boolean\r\n              regex?: boolean\r\n              undefined?: boolean\r\n              error?: boolean\r\n              symbol?: boolean\r\n              map?: boolean\r\n              set?: boolean\r\n              function?: boolean | Function\r\n            }\r\n        replacer?: (key: string, value: unknown) => unknown\r\n        reviver?: (key: string, value: unknown) => unknown\r\n        immutable?: unknown\r\n        refs?: unknown[]\r\n      }\r\n  /**\r\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\r\n   */\r\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A\r\n  /**\r\n   * function which takes `state` object and index as arguments, and should return `state` object back.\r\n   */\r\n  stateSanitizer?: <S>(state: S, index: number) => S\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   */\r\n  actionsBlacklist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   */\r\n  actionsWhitelist?: string | string[]\r\n  /**\r\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\r\n   * Use it as a more advanced version of `actionsBlacklist`/`actionsWhitelist` parameters.\r\n   */\r\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean\r\n  /**\r\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\r\n   * Available only for Redux enhancer, for others use `autoPause`.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldRecordChanges?: boolean\r\n  /**\r\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\r\n   * If not specified, will commit when paused. Available only for Redux enhancer.\r\n   *\r\n   * @default \"@@PAUSED\"\"\r\n   */\r\n  pauseActionType?: string\r\n  /**\r\n   * auto pauses when the extension’s window is not opened, and so has zero impact on your app when not in use.\r\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\r\n   *\r\n   * @default false\r\n   */\r\n  autoPause?: boolean\r\n  /**\r\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\r\n   * Available only for Redux enhancer.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldStartLocked?: boolean\r\n  /**\r\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldHotReload?: boolean\r\n  /**\r\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldCatchErrors?: boolean\r\n  /**\r\n   * If you want to restrict the extension, specify the features you allow.\r\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\r\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\r\n   * Otherwise, you'll get/set the data right from the monitor part.\r\n   */\r\n  features?: {\r\n    /**\r\n     * start/pause recording of dispatched actions\r\n     */\r\n    pause?: boolean\r\n    /**\r\n     * lock/unlock dispatching actions and side effects\r\n     */\r\n    lock?: boolean\r\n    /**\r\n     * persist states on page reloading\r\n     */\r\n    persist?: boolean\r\n    /**\r\n     * export history of actions in a file\r\n     */\r\n    export?: boolean | 'custom'\r\n    /**\r\n     * import history of actions from a file\r\n     */\r\n    import?: boolean | 'custom'\r\n    /**\r\n     * jump back and forth (time travelling)\r\n     */\r\n    jump?: boolean\r\n    /**\r\n     * skip (cancel) actions\r\n     */\r\n    skip?: boolean\r\n    /**\r\n     * drag and drop actions in the history list\r\n     */\r\n    reorder?: boolean\r\n    /**\r\n     * dispatch custom actions or action creators\r\n     */\r\n    dispatch?: boolean\r\n    /**\r\n     * generate tests for the selected actions\r\n     */\r\n    test?: boolean\r\n  }\r\n  /**\r\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\r\n   * Defaults to false.\r\n   */\r\n  trace?: boolean | (<A extends Action>(action: A) => string)\r\n  /**\r\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\r\n   */\r\n  traceLimit?: number\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const composeWithDevTools: {\r\n  (options: EnhancerOptions): typeof compose\r\n  <StoreExt>(...funcs: Array<StoreEnhancer<StoreExt>>): StoreEnhancer<StoreExt>\r\n} =\r\n  typeof window !== 'undefined' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : function() {\r\n        if (arguments.length === 0) return undefined\r\n        if (typeof arguments[0] === 'object') return compose\r\n        return compose.apply(null, (arguments as any) as Function[])\r\n      }\r\n\r\n/**\r\n * @public\r\n */\r\nexport const devToolsEnhancer: {\r\n  (options: EnhancerOptions): StoreEnhancer<any>\r\n} =\r\n  typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    : function() {\r\n        return function(noop) {\r\n          return noop\r\n        }\r\n      }\r\n","/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * prototype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n *\r\n * @public\r\n */\r\nexport default function isPlainObject(value: unknown): value is object {\r\n  if (typeof value !== 'object' || value === null) return false\r\n\r\n  let proto = value\r\n  while (Object.getPrototypeOf(proto) !== null) {\r\n    proto = Object.getPrototypeOf(proto)\r\n  }\r\n\r\n  return Object.getPrototypeOf(value) === proto\r\n}\r\n","import { Middleware } from 'redux'\r\n\r\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\r\n  let elapsed = 0\r\n  return {\r\n    measureTime<T>(fn: () => T): T {\r\n      const started = Date.now()\r\n      try {\r\n        return fn()\r\n      } finally {\r\n        const finished = Date.now()\r\n        elapsed += finished - started\r\n      }\r\n    },\r\n    warnIfExceeded() {\r\n      if (elapsed > maxDelay) {\r\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \r\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\r\nIt is disabled in production builds, so you don't need to worry about that.`)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class MiddlewareArray<\r\n  Middlewares extends Middleware<any, any>\r\n> extends Array<Middlewares> {\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<Middlewares | AdditionalMiddlewares[number]>\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<Middlewares | AdditionalMiddlewares[number]>\r\n\r\n  concat(...arr: any[]) {\r\n    return new MiddlewareArray(...super.concat(...arr))\r\n  }\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<AdditionalMiddlewares[number] | Middlewares>\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<AdditionalMiddlewares[number] | Middlewares>\r\n\r\n  prepend(...arr: any[]) {\r\n    if (arr.length === 1 && Array.isArray(arr[0])) {\r\n      return new MiddlewareArray(...arr[0].concat(this))\r\n    }\r\n    return new MiddlewareArray(...arr.concat(this))\r\n  }\r\n}\r\n","import { Middleware } from 'redux'\r\nimport { getTimeMeasureUtils } from './utils'\r\n\r\ntype EntryProcessor = (key: string, value: any) => any\r\n\r\nconst isProduction: boolean = process.env.NODE_ENV === 'production'\r\nconst prefix: string = 'Invariant failed'\r\n\r\n// Throw an error if the condition fails\r\n// Strip out error messages for production\r\n// > Not providing an inline default argument for message as the result is smaller\r\nfunction invariant(condition: any, message?: string) {\r\n  if (condition) {\r\n    return\r\n  }\r\n  // Condition not passed\r\n\r\n  // In production we strip the message but still throw\r\n  if (isProduction) {\r\n    throw new Error(prefix)\r\n  }\r\n\r\n  // When not in production we allow the message to pass through\r\n  // *This block will be removed in production builds*\r\n  throw new Error(`${prefix}: ${message || ''}`)\r\n}\r\n\r\nfunction stringify(\r\n  obj: any,\r\n  serializer?: EntryProcessor,\r\n  indent?: string | number,\r\n  decycler?: EntryProcessor\r\n): string {\r\n  return JSON.stringify(obj, getSerialize(serializer, decycler), indent)\r\n}\r\n\r\nfunction getSerialize(\r\n  serializer?: EntryProcessor,\r\n  decycler?: EntryProcessor\r\n): EntryProcessor {\r\n  let stack: any[] = [],\r\n    keys: any[] = []\r\n\r\n  if (!decycler)\r\n    decycler = function(_: string, value: any) {\r\n      if (stack[0] === value) return '[Circular ~]'\r\n      return (\r\n        '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']'\r\n      )\r\n    }\r\n\r\n  return function(this: any, key: string, value: any) {\r\n    if (stack.length > 0) {\r\n      var thisPos = stack.indexOf(this)\r\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\r\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\r\n      if (~stack.indexOf(value)) value = decycler!.call(this, key, value)\r\n    } else stack.push(value)\r\n\r\n    return serializer == null ? value : serializer.call(this, key, value)\r\n  }\r\n}\r\n\r\n/**\r\n * The default `isImmutable` function.\r\n *\r\n * @public\r\n */\r\nexport function isImmutableDefault(value: unknown): boolean {\r\n  return (\r\n    typeof value !== 'object' ||\r\n    value === null ||\r\n    typeof value === 'undefined' ||\r\n    Object.isFrozen(value)\r\n  )\r\n}\r\n\r\nexport function trackForMutations(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: string[] | undefined,\r\n  obj: any\r\n) {\r\n  const trackedProperties = trackProperties(isImmutable, ignorePaths, obj)\r\n  return {\r\n    detectMutations() {\r\n      return detectMutations(isImmutable, ignorePaths, trackedProperties, obj)\r\n    }\r\n  }\r\n}\r\n\r\ninterface TrackedProperty {\r\n  value: any\r\n  children: Record<string, any>\r\n}\r\n\r\nfunction trackProperties(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: IgnorePaths = [],\r\n  obj: Record<string, any>,\r\n  path: string = ''\r\n) {\r\n  const tracked: Partial<TrackedProperty> = { value: obj }\r\n\r\n  if (!isImmutable(obj)) {\r\n    tracked.children = {}\r\n\r\n    for (const key in obj) {\r\n      const childPath = path ? path + '.' + key : key\r\n      if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n        continue\r\n      }\r\n\r\n      tracked.children[key] = trackProperties(\r\n        isImmutable,\r\n        ignorePaths,\r\n        obj[key],\r\n        childPath\r\n      )\r\n    }\r\n  }\r\n  return tracked as TrackedProperty\r\n}\r\n\r\ntype IgnorePaths = string[]\r\n\r\nfunction detectMutations(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: IgnorePaths = [],\r\n  trackedProperty: TrackedProperty,\r\n  obj: any,\r\n  sameParentRef: boolean = false,\r\n  path: string = ''\r\n): { wasMutated: boolean; path?: string } {\r\n  const prevObj = trackedProperty ? trackedProperty.value : undefined\r\n\r\n  const sameRef = prevObj === obj\r\n\r\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\r\n    return { wasMutated: true, path }\r\n  }\r\n\r\n  if (isImmutable(prevObj) || isImmutable(obj)) {\r\n    return { wasMutated: false }\r\n  }\r\n\r\n  // Gather all keys from prev (tracked) and after objs\r\n  const keysToDetect: Record<string, boolean> = {}\r\n  for (let key in trackedProperty.children) {\r\n    keysToDetect[key] = true\r\n  }\r\n  for (let key in obj) {\r\n    keysToDetect[key] = true\r\n  }\r\n\r\n  for (let key in keysToDetect) {\r\n    const childPath = path ? path + '.' + key : key\r\n    if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n      continue\r\n    }\r\n\r\n    const result = detectMutations(\r\n      isImmutable,\r\n      ignorePaths,\r\n      trackedProperty.children[key],\r\n      obj[key],\r\n      sameRef,\r\n      childPath\r\n    )\r\n\r\n    if (result.wasMutated) {\r\n      return result\r\n    }\r\n  }\r\n  return { wasMutated: false }\r\n}\r\n\r\ntype IsImmutableFunc = (value: any) => boolean\r\n\r\n/**\r\n * Options for `createImmutableStateInvariantMiddleware()`.\r\n *\r\n * @public\r\n */\r\nexport interface ImmutableStateInvariantMiddlewareOptions {\r\n  /**\r\n    Callback function to check if a value is considered to be immutable.\r\n    This function is applied recursively to every value contained in the state.\r\n    The default implementation will return true for primitive types \r\n    (like numbers, strings, booleans, null and undefined).\r\n   */\r\n  isImmutable?: IsImmutableFunc\r\n  /** \r\n    An array of dot-separated path strings that match named nodes from \r\n    the root state to ignore when checking for immutability.\r\n    Defaults to undefined\r\n   */\r\n  ignoredPaths?: string[]\r\n  /** Print a warning if checks take longer than N ms. Default: 32ms */\r\n  warnAfter?: number\r\n  // @deprecated. Use ignoredPaths\r\n  ignore?: string[]\r\n}\r\n\r\n/**\r\n * Creates a middleware that checks whether any state was mutated in between\r\n * dispatches or during a dispatch. If any mutations are detected, an error is\r\n * thrown.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\r\nexport function createImmutableStateInvariantMiddleware(\r\n  options: ImmutableStateInvariantMiddlewareOptions = {}\r\n): Middleware {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => next => action => next(action)\r\n  }\r\n\r\n  let {\r\n    isImmutable = isImmutableDefault,\r\n    ignoredPaths,\r\n    warnAfter = 32,\r\n    ignore\r\n  } = options\r\n\r\n  // Alias ignore->ignoredPaths, but prefer ignoredPaths if present\r\n  ignoredPaths = ignoredPaths || ignore\r\n\r\n  const track = trackForMutations.bind(null, isImmutable, ignoredPaths)\r\n\r\n  return ({ getState }) => {\r\n    let state = getState()\r\n    let tracker = track(state)\r\n\r\n    let result\r\n    return next => action => {\r\n      const measureUtils = getTimeMeasureUtils(\r\n        warnAfter,\r\n        'ImmutableStateInvariantMiddleware'\r\n      )\r\n\r\n      measureUtils.measureTime(() => {\r\n        state = getState()\r\n\r\n        result = tracker.detectMutations()\r\n        // Track before potentially not meeting the invariant\r\n        tracker = track(state)\r\n\r\n        invariant(\r\n          !result.wasMutated,\r\n          `A state mutation was detected between dispatches, in the path '${result.path ||\r\n            ''}'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`\r\n        )\r\n      })\r\n\r\n      const dispatchedAction = next(action)\r\n\r\n      measureUtils.measureTime(() => {\r\n        state = getState()\r\n\r\n        result = tracker.detectMutations()\r\n        // Track before potentially not meeting the invariant\r\n        tracker = track(state)\r\n\r\n        result.wasMutated &&\r\n          invariant(\r\n            !result.wasMutated,\r\n            `A state mutation was detected inside a dispatch, in the path: ${result.path ||\r\n              ''}. Take a look at the reducer(s) handling the action ${stringify(\r\n              action\r\n            )}. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`\r\n          )\r\n      })\r\n\r\n      measureUtils.warnIfExceeded()\r\n\r\n      return dispatchedAction\r\n    }\r\n  }\r\n}\r\n","import isPlainObject from './isPlainObject'\r\nimport { Middleware } from 'redux'\r\nimport { getTimeMeasureUtils } from './utils'\r\n\r\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n *\r\n * @public\r\n */\r\nexport function isPlain(val: any) {\r\n  const type = typeof val\r\n  return (\r\n    type === 'undefined' ||\r\n    val === null ||\r\n    type === 'string' ||\r\n    type === 'boolean' ||\r\n    type === 'number' ||\r\n    Array.isArray(val) ||\r\n    isPlainObject(val)\r\n  )\r\n}\r\n\r\ninterface NonSerializableValue {\r\n  keyPath: string\r\n  value: unknown\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport function findNonSerializableValue(\r\n  value: unknown,\r\n  path: string = '',\r\n  isSerializable: (value: unknown) => boolean = isPlain,\r\n  getEntries?: (value: unknown) => [string, any][],\r\n  ignoredPaths: string[] = []\r\n): NonSerializableValue | false {\r\n  let foundNestedSerializable: NonSerializableValue | false\r\n\r\n  if (!isSerializable(value)) {\r\n    return {\r\n      keyPath: path || '<root>',\r\n      value: value\r\n    }\r\n  }\r\n\r\n  if (typeof value !== 'object' || value === null) {\r\n    return false\r\n  }\r\n\r\n  const entries = getEntries != null ? getEntries(value) : Object.entries(value)\r\n\r\n  const hasIgnoredPaths = ignoredPaths.length > 0\r\n\r\n  for (const [key, nestedValue] of entries) {\r\n    const nestedPath = path ? path + '.' + key : key // path.concat(property)\r\n\r\n    if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {\r\n      continue\r\n    }\r\n\r\n    if (!isSerializable(nestedValue)) {\r\n      return {\r\n        keyPath: nestedPath,\r\n        value: nestedValue\r\n      }\r\n    }\r\n\r\n    if (typeof nestedValue === 'object') {\r\n      foundNestedSerializable = findNonSerializableValue(\r\n        nestedValue,\r\n        nestedPath,\r\n        isSerializable,\r\n        getEntries,\r\n        ignoredPaths\r\n      )\r\n\r\n      if (foundNestedSerializable) {\r\n        return foundNestedSerializable\r\n      }\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Options for `createSerializableStateInvariantMiddleware()`.\r\n *\r\n * @public\r\n */\r\nexport interface SerializableStateInvariantMiddlewareOptions {\r\n  /**\r\n   * The function to check if a value is considered serializable. This\r\n   * function is applied recursively to every value contained in the\r\n   * state. Defaults to `isPlain()`.\r\n   */\r\n  isSerializable?: (value: any) => boolean\r\n  /**\r\n   * The function that will be used to retrieve entries from each\r\n   * value.  If unspecified, `Object.entries` will be used. Defaults\r\n   * to `undefined`.\r\n   */\r\n  getEntries?: (value: any) => [string, any][]\r\n\r\n  /**\r\n   * An array of action types to ignore when checking for serializability.\r\n   * Defaults to []\r\n   */\r\n  ignoredActions?: string[]\r\n\r\n  /**\r\n   * An array of dot-separated path strings to ignore when checking\r\n   * for serializability, Defaults to ['meta.arg']\r\n   */\r\n  ignoredActionPaths?: string[]\r\n\r\n  /**\r\n   * An array of dot-separated path strings to ignore when checking\r\n   * for serializability, Defaults to []\r\n   */\r\n  ignoredPaths?: string[]\r\n  /**\r\n   * Execution time warning threshold. If the middleware takes longer\r\n   * than `warnAfter` ms, a warning will be displayed in the console.\r\n   * Defaults to 32ms.\r\n   */\r\n  warnAfter?: number\r\n\r\n  /**\r\n   * Opt out of checking state, but continue checking actions\r\n   */\r\n  ignoreState?: boolean\r\n}\r\n\r\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\r\nexport function createSerializableStateInvariantMiddleware(\r\n  options: SerializableStateInvariantMiddlewareOptions = {}\r\n): Middleware {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => next => action => next(action)\r\n  }\r\n  const {\r\n    isSerializable = isPlain,\r\n    getEntries,\r\n    ignoredActions = [],\r\n    ignoredActionPaths = ['meta.arg'],\r\n    ignoredPaths = [],\r\n    warnAfter = 32,\r\n    ignoreState = false\r\n  } = options\r\n\r\n  return storeAPI => next => action => {\r\n    if (ignoredActions.length && ignoredActions.indexOf(action.type) !== -1) {\r\n      return next(action)\r\n    }\r\n\r\n    const measureUtils = getTimeMeasureUtils(\r\n      warnAfter,\r\n      'SerializableStateInvariantMiddleware'\r\n    )\r\n    measureUtils.measureTime(() => {\r\n      const foundActionNonSerializableValue = findNonSerializableValue(\r\n        action,\r\n        '',\r\n        isSerializable,\r\n        getEntries,\r\n        ignoredActionPaths\r\n      )\r\n\r\n      if (foundActionNonSerializableValue) {\r\n        const { keyPath, value } = foundActionNonSerializableValue\r\n\r\n        console.error(\r\n          `A non-serializable value was detected in an action, in the path: \\`${keyPath}\\`. Value:`,\r\n          value,\r\n          '\\nTake a look at the logic that dispatched this action: ',\r\n          action,\r\n          '\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)',\r\n          '\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)'\r\n        )\r\n      }\r\n    })\r\n\r\n    const result = next(action)\r\n\r\n    if (!ignoreState) {\r\n      measureUtils.measureTime(() => {\r\n        const state = storeAPI.getState()\r\n\r\n        const foundStateNonSerializableValue = findNonSerializableValue(\r\n          state,\r\n          '',\r\n          isSerializable,\r\n          getEntries,\r\n          ignoredPaths\r\n        )\r\n\r\n        if (foundStateNonSerializableValue) {\r\n          const { keyPath, value } = foundStateNonSerializableValue\r\n\r\n          console.error(\r\n            `A non-serializable value was detected in the state, in the path: \\`${keyPath}\\`. Value:`,\r\n            value,\r\n            `\r\nTake a look at the reducer(s) handling this action type: ${action.type}.\r\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)`\r\n          )\r\n        }\r\n      })\r\n\r\n      measureUtils.warnIfExceeded()\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","import { Middleware, AnyAction } from 'redux'\r\nimport thunkMiddleware, { ThunkMiddleware } from 'redux-thunk'\r\nimport {\r\n  /* PROD_START_REMOVE_UMD */\r\n  createImmutableStateInvariantMiddleware,\r\n  /* PROD_STOP_REMOVE_UMD */\r\n  ImmutableStateInvariantMiddlewareOptions\r\n} from './immutableStateInvariantMiddleware'\r\n\r\nimport {\r\n  createSerializableStateInvariantMiddleware,\r\n  SerializableStateInvariantMiddlewareOptions\r\n} from './serializableStateInvariantMiddleware'\r\nimport { MiddlewareArray } from './utils'\r\n\r\nfunction isBoolean(x: any): x is boolean {\r\n  return typeof x === 'boolean'\r\n}\r\n\r\ninterface ThunkOptions<E = any> {\r\n  extraArgument: E\r\n}\r\n\r\ninterface GetDefaultMiddlewareOptions {\r\n  thunk?: boolean | ThunkOptions\r\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions\r\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions\r\n}\r\n\r\nexport type ThunkMiddlewareFor<\r\n  S,\r\n  O extends GetDefaultMiddlewareOptions = {}\r\n> = O extends {\r\n  thunk: false\r\n}\r\n  ? never\r\n  : O extends { thunk: { extraArgument: infer E } }\r\n  ? ThunkMiddleware<S, AnyAction, E>\r\n  :\r\n      | ThunkMiddleware<S, AnyAction, null> //The ThunkMiddleware with a `null` ExtraArgument is here to provide backwards-compatibility.\r\n      | ThunkMiddleware<S, AnyAction>\r\n\r\nexport type CurriedGetDefaultMiddleware<S = any> = <\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options?: O\r\n) => MiddlewareArray<Middleware<{}, S> | ThunkMiddlewareFor<S, O>>\r\n\r\nexport function curryGetDefaultMiddleware<\r\n  S = any\r\n>(): CurriedGetDefaultMiddleware<S> {\r\n  return function curriedGetDefaultMiddleware(options) {\r\n    return getDefaultMiddleware(options)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n */\r\nexport function getDefaultMiddleware<\r\n  S = any,\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options: O = {} as O\r\n): MiddlewareArray<Middleware<{}, S> | ThunkMiddlewareFor<S, O>> {\r\n  const {\r\n    thunk = true,\r\n    immutableCheck = true,\r\n    serializableCheck = true\r\n  } = options\r\n\r\n  let middlewareArray: Middleware<{}, S>[] = new MiddlewareArray()\r\n\r\n  if (thunk) {\r\n    if (isBoolean(thunk)) {\r\n      middlewareArray.push(thunkMiddleware)\r\n    } else {\r\n      middlewareArray.push(\r\n        thunkMiddleware.withExtraArgument(thunk.extraArgument)\r\n      )\r\n    }\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (immutableCheck) {\r\n      /* PROD_START_REMOVE_UMD */\r\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(immutableCheck)) {\r\n        immutableOptions = immutableCheck\r\n      }\r\n\r\n      middlewareArray.unshift(\r\n        createImmutableStateInvariantMiddleware(immutableOptions)\r\n      )\r\n      /* PROD_STOP_REMOVE_UMD */\r\n    }\r\n\r\n    if (serializableCheck) {\r\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(serializableCheck)) {\r\n        serializableOptions = serializableCheck\r\n      }\r\n\r\n      middlewareArray.push(\r\n        createSerializableStateInvariantMiddleware(serializableOptions)\r\n      )\r\n    }\r\n  }\r\n\r\n  return middlewareArray as any\r\n}\r\n","import {\r\n  createStore,\r\n  compose,\r\n  applyMiddleware,\r\n  combineReducers,\r\n  Reducer,\r\n  ReducersMapObject,\r\n  Middleware,\r\n  Action,\r\n  AnyAction,\r\n  StoreEnhancer,\r\n  Store,\r\n  DeepPartial,\r\n  Dispatch\r\n} from 'redux'\r\nimport {\r\n  composeWithDevTools,\r\n  EnhancerOptions as DevToolsOptions\r\n} from './devtoolsExtension'\r\n\r\nimport isPlainObject from './isPlainObject'\r\nimport {\r\n  ThunkMiddlewareFor,\r\n  curryGetDefaultMiddleware,\r\n  CurriedGetDefaultMiddleware\r\n} from './getDefaultMiddleware'\r\nimport { DispatchForMiddlewares } from './tsHelpers'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\n/**\r\n * Callback function type, to be used in `ConfigureStoreOptions.enhancers`\r\n *\r\n * @public\r\n */\r\nexport type ConfigureEnhancersCallback = (\r\n  defaultEnhancers: StoreEnhancer[]\r\n) => StoreEnhancer[]\r\n\r\n/**\r\n * Options for `configureStore()`.\r\n *\r\n * @public\r\n */\r\nexport interface ConfigureStoreOptions<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> {\r\n  /**\r\n   * A single reducer function that will be used as the root reducer, or an\r\n   * object of slice reducers that will be passed to `combineReducers()`.\r\n   */\r\n  reducer: Reducer<S, A> | ReducersMapObject<S, A>\r\n\r\n  /**\r\n   * An array of Redux middleware to install. If not supplied, defaults to\r\n   * the set of middleware returned by `getDefaultMiddleware()`.\r\n   */\r\n  middleware?: ((getDefaultMiddleware: CurriedGetDefaultMiddleware<S>) => M) | M\r\n\r\n  /**\r\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\r\n   *\r\n   * Additional configuration can be done by passing Redux DevTools options\r\n   */\r\n  devTools?: boolean | DevToolsOptions\r\n\r\n  /**\r\n   * The initial state, same as Redux's createStore.\r\n   * You may optionally specify it to hydrate the state\r\n   * from the server in universal apps, or to restore a previously serialized\r\n   * user session. If you use `combineReducers()` to produce the root reducer\r\n   * function (either directly or indirectly by passing an object as `reducer`),\r\n   * this must be an object with the same shape as the reducer map keys.\r\n   */\r\n  // NOTE: The needlessly complicated `S extends any ? S : S` instead of just\r\n  // `S` ensures that the TypeScript compiler doesn't attempt to infer `S`\r\n  // based on the value passed as `preloadedState`, which might be a partial\r\n  // state rather than the full thing.\r\n  preloadedState?: DeepPartial<S extends any ? S : S>\r\n\r\n  /**\r\n   * The store enhancers to apply. See Redux's `createStore()`.\r\n   * All enhancers will be included before the DevTools Extension enhancer.\r\n   * If you need to customize the order of enhancers, supply a callback\r\n   * function that will receive the original array (ie, `[applyMiddleware]`),\r\n   * and should return a new array (such as `[applyMiddleware, offline]`).\r\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\r\n   */\r\n  enhancers?: StoreEnhancer[] | ConfigureEnhancersCallback\r\n}\r\n\r\ntype Middlewares<S> = ReadonlyArray<Middleware<{}, S>>\r\n\r\n/**\r\n * A Redux store returned by `configureStore()`. Supports dispatching\r\n * side-effectful _thunks_ in addition to plain actions.\r\n *\r\n * @public\r\n */\r\nexport interface EnhancedStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> extends Store<S, A> {\r\n  /**\r\n   * The `dispatch` method of your store, enhanced by all its middlewares.\r\n   *\r\n   * @inheritdoc\r\n   */\r\n  dispatch: DispatchForMiddlewares<M> & Dispatch<A>\r\n}\r\n\r\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\r\nexport function configureStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = [ThunkMiddlewareFor<S>]\r\n>(options: ConfigureStoreOptions<S, A, M>): EnhancedStore<S, A, M> {\r\n  const curriedGetDefaultMiddleware = curryGetDefaultMiddleware<S>()\r\n\r\n  const {\r\n    reducer = undefined,\r\n    middleware = curriedGetDefaultMiddleware(),\r\n    devTools = true,\r\n    preloadedState = undefined,\r\n    enhancers = undefined\r\n  } = options || {}\r\n\r\n  let rootReducer: Reducer<S, A>\r\n\r\n  if (typeof reducer === 'function') {\r\n    rootReducer = reducer\r\n  } else if (isPlainObject(reducer)) {\r\n    rootReducer = combineReducers(reducer)\r\n  } else {\r\n    throw new Error(\r\n      '\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'\r\n    )\r\n  }\r\n\r\n  const middlewareEnhancer = applyMiddleware(\r\n    ...(typeof middleware === 'function'\r\n      ? middleware(curriedGetDefaultMiddleware)\r\n      : middleware)\r\n  )\r\n\r\n  let finalCompose = compose\r\n\r\n  if (devTools) {\r\n    finalCompose = composeWithDevTools({\r\n      // Enable capture of stack traces for dispatched Redux actions\r\n      trace: !IS_PRODUCTION,\r\n      ...(typeof devTools === 'object' && devTools)\r\n    })\r\n  }\r\n\r\n  let storeEnhancers: StoreEnhancer[] = [middlewareEnhancer]\r\n\r\n  if (Array.isArray(enhancers)) {\r\n    storeEnhancers = [middlewareEnhancer, ...enhancers]\r\n  } else if (typeof enhancers === 'function') {\r\n    storeEnhancers = enhancers(storeEnhancers)\r\n  }\r\n\r\n  const composedEnhancer = finalCompose(...storeEnhancers) as any\r\n\r\n  return createStore(rootReducer, preloadedState as any, composedEnhancer)\r\n}\r\n","import { Action } from 'redux'\r\nimport {\r\n  IsUnknownOrNonInferrable,\r\n  IfMaybeUndefined,\r\n  IfVoid,\r\n  IsAny\r\n} from './tsHelpers'\r\nimport isPlainObject from './isPlainObject'\r\n\r\n/**\r\n * An action with a string type and an associated payload. This is the\r\n * type of action returned by `createAction()` action creators.\r\n *\r\n * @template P The type of the action's payload.\r\n * @template T the type used for the action type.\r\n * @template M The type of the action's meta (optional)\r\n * @template E The type of the action's error (optional)\r\n *\r\n * @public\r\n */\r\nexport type PayloadAction<\r\n  P = void,\r\n  T extends string = string,\r\n  M = never,\r\n  E = never\r\n> = {\r\n  payload: P\r\n  type: T\r\n} & ([M] extends [never]\r\n  ? {}\r\n  : {\r\n      meta: M\r\n    }) &\r\n  ([E] extends [never]\r\n    ? {}\r\n    : {\r\n        error: E\r\n      })\r\n\r\n/**\r\n * A \"prepare\" method to be used as the second parameter of `createAction`.\r\n * Takes any number of arguments and returns a Flux Standard Action without\r\n * type (will be added later) that *must* contain a payload (might be undefined).\r\n *\r\n * @public\r\n */\r\nexport type PrepareAction<P> =\r\n  | ((...args: any[]) => { payload: P })\r\n  | ((...args: any[]) => { payload: P; meta: any })\r\n  | ((...args: any[]) => { payload: P; error: any })\r\n  | ((...args: any[]) => { payload: P; meta: any; error: any })\r\n\r\n/**\r\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\r\n *\r\n * @internal\r\n */\r\nexport type _ActionCreatorWithPreparedPayload<\r\n  PA extends PrepareAction<any> | void,\r\n  T extends string = string\r\n> = PA extends PrepareAction<infer P>\r\n  ? ActionCreatorWithPreparedPayload<\r\n      Parameters<PA>,\r\n      P,\r\n      T,\r\n      ReturnType<PA> extends {\r\n        error: infer E\r\n      }\r\n        ? E\r\n        : never,\r\n      ReturnType<PA> extends {\r\n        meta: infer M\r\n      }\r\n        ? M\r\n        : never\r\n    >\r\n  : void\r\n\r\n/**\r\n * Basic type for all action creators.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n */\r\ninterface BaseActionCreator<P, T extends string, M = never, E = never> {\r\n  type: T\r\n  match(action: Action<unknown>): action is PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator that takes multiple arguments that are passed\r\n * to a `PrepareAction` method to create the final Action.\r\n * @typeParam Args arguments for the action creator function\r\n * @typeParam P `payload` type\r\n * @typeParam T `type` name\r\n * @typeParam E optional `error` type\r\n * @typeParam M optional `meta` type\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPreparedPayload<\r\n  Args extends unknown[],\r\n  P,\r\n  T extends string = string,\r\n  E = never,\r\n  M = never\r\n> extends BaseActionCreator<P, T, M, E> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with `Args` will return\r\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\r\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\r\n   */\r\n  (...args: Args): PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes an optional payload of type `P`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\r\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\r\n   */\r\n  (payload?: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes no payload.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithoutPayload<T extends string = string>\r\n  extends BaseActionCreator<undefined, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\r\n   */\r\n  (): PayloadAction<undefined, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that requires a payload of type P.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\r\n   */\r\n  (payload: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithNonInferrablePayload<\r\n  T extends string = string\r\n> extends BaseActionCreator<unknown, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload\r\n   * of exactly the type of the argument.\r\n   */\r\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>\r\n}\r\n\r\n/**\r\n * An action creator that produces actions with a `payload` attribute.\r\n *\r\n * @typeParam P the `payload` type\r\n * @typeParam T the `type` of the resulting action\r\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\r\n *\r\n * @public\r\n */\r\nexport type PayloadActionCreator<\r\n  P = void,\r\n  T extends string = string,\r\n  PA extends PrepareAction<P> | void = void\r\n> = IfPrepareActionMethodProvided<\r\n  PA,\r\n  _ActionCreatorWithPreparedPayload<PA, T>,\r\n  // else\r\n  IsAny<\r\n    P,\r\n    ActionCreatorWithPayload<any, T>,\r\n    IsUnknownOrNonInferrable<\r\n      P,\r\n      ActionCreatorWithNonInferrablePayload<T>,\r\n      // else\r\n      IfVoid<\r\n        P,\r\n        ActionCreatorWithoutPayload<T>,\r\n        // else\r\n        IfMaybeUndefined<\r\n          P,\r\n          ActionCreatorWithOptionalPayload<P, T>,\r\n          // else\r\n          ActionCreatorWithPayload<P, T>\r\n        >\r\n      >\r\n    >\r\n  >\r\n>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<P = void, T extends string = string>(\r\n  type: T\r\n): PayloadActionCreator<P, T>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<\r\n  PA extends PrepareAction<any>,\r\n  T extends string = string\r\n>(\r\n  type: T,\r\n  prepareAction: PA\r\n): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>\r\n\r\nexport function createAction(type: string, prepareAction?: Function): any {\r\n  function actionCreator(...args: any[]) {\r\n    if (prepareAction) {\r\n      let prepared = prepareAction(...args)\r\n      if (!prepared) {\r\n        throw new Error('prepareAction did not return an object')\r\n      }\r\n\r\n      return {\r\n        type,\r\n        payload: prepared.payload,\r\n        ...('meta' in prepared && { meta: prepared.meta }),\r\n        ...('error' in prepared && { error: prepared.error })\r\n      }\r\n    }\r\n    return { type, payload: args[0] }\r\n  }\r\n\r\n  actionCreator.toString = () => `${type}`\r\n\r\n  actionCreator.type = type\r\n\r\n  actionCreator.match = (action: Action<unknown>): action is PayloadAction =>\r\n    action.type === type\r\n\r\n  return actionCreator\r\n}\r\n\r\nexport function isFSA(\r\n  action: unknown\r\n): action is {\r\n  type: string\r\n  payload?: unknown\r\n  error?: unknown\r\n  meta?: unknown\r\n} {\r\n  return (\r\n    isPlainObject(action) &&\r\n    typeof (action as any).type === 'string' &&\r\n    Object.keys(action).every(isValidKey)\r\n  )\r\n}\r\n\r\nfunction isValidKey(key: string) {\r\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1\r\n}\r\n\r\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\r\nexport function getType<T extends string>(\r\n  actionCreator: PayloadActionCreator<any, T>\r\n): T {\r\n  return `${actionCreator}` as T\r\n}\r\n\r\n// helper types for more readable typings\r\n\r\ntype IfPrepareActionMethodProvided<\r\n  PA extends PrepareAction<any> | void,\r\n  True,\r\n  False\r\n> = PA extends (...args: any[]) => any ? True : False\r\n","import { Action, AnyAction } from 'redux'\r\nimport {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ActionMatcher,\r\n  ActionMatcherDescriptionCollection\r\n} from './createReducer'\r\n\r\nexport interface TypedActionCreator<Type extends string> {\r\n  (...args: any[]): Action<Type>\r\n  type: Type\r\n}\r\n\r\n/**\r\n * A builder for an action <-> reducer map.\r\n *\r\n * @public\r\n */\r\nexport interface ActionReducerMapBuilder<State> {\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<ActionCreator extends TypedActionCreator<string>>(\r\n    actionCreator: ActionCreator,\r\n    reducer: CaseReducer<State, ReturnType<ActionCreator>>\r\n  ): ActionReducerMapBuilder<State>\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<Type extends string, A extends Action<Type>>(\r\n    type: Type,\r\n    reducer: CaseReducer<State, A>\r\n  ): ActionReducerMapBuilder<State>\r\n\r\n  /**\r\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\r\n   * @remarks\r\n   * If multiple matcher reducers match, all of them will be executed in the order\r\n   * they were defined in - even if a case reducer already matched.\r\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\r\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/advanced-types.html#using-type-predicates)\r\n   *   function\r\n   * @param reducer - The actual case reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AsyncThunk,\r\n  AnyAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\r\n\r\ntype PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\r\ntype RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\r\ntype FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\r\n\r\nconst initialState: Record<string, string> = {};\r\nconst resetAction = createAction(\"reset-tracked-loading-state\");\r\n\r\nfunction isPendingAction(action: AnyAction): action is PendingAction {\r\n  return action.type.endsWith(\"/pending\");\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(resetAction, () => initialState)\r\n    // matcher can be defined outside as a type predicate function\r\n    .addMatcher(isPendingAction, (state, action) => {\r\n      state[action.meta.requestId] = \"pending\";\r\n    })\r\n    .addMatcher(\r\n      // matcher can be defined inline as a type predicate function\r\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"rejected\";\r\n      }\r\n    )\r\n    // matcher can just return boolean and the matcher can receive a generic argument\r\n    .addMatcher<FulfilledAction>(\r\n      (action) => action.type.endsWith(\"/fulfilled\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"fulfilled\";\r\n      }\r\n    );\r\n});\r\n```\r\n   */\r\n  addMatcher<A extends AnyAction>(\r\n    matcher: ActionMatcher<A> | ((action: AnyAction) => boolean),\r\n    reducer: CaseReducer<State, A>\r\n  ): Omit<ActionReducerMapBuilder<State>, 'addCase'>\r\n\r\n  /**\r\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\r\n   * reducer was executed for this action.\r\n   * @param reducer - The fallback \"default case\" reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nconst initialState = { otherActions: 0 }\r\nconst reducer = createReducer(initialState, builder => {\r\n  builder\r\n    // .addCase(...)\r\n    // .addMatcher(...)\r\n    .addDefaultCase((state, action) => {\r\n      state.otherActions++\r\n    })\r\n})\r\n```\r\n   */\r\n  addDefaultCase(reducer: CaseReducer<State, AnyAction>): {}\r\n}\r\n\r\nexport function executeReducerBuilderCallback<S>(\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): [\r\n  CaseReducers<S, any>,\r\n  ActionMatcherDescriptionCollection<S>,\r\n  CaseReducer<S, AnyAction> | undefined\r\n] {\r\n  const actionsMap: CaseReducers<S, any> = {}\r\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = []\r\n  let defaultCaseReducer: CaseReducer<S, AnyAction> | undefined\r\n  const builder = {\r\n    addCase(\r\n      typeOrActionCreator: string | TypedActionCreator<any>,\r\n      reducer: CaseReducer<S>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        /*\r\n         to keep the definition by the user in line with actual behavior, \r\n         we enforce `addCase` to always be called before calling `addMatcher`\r\n         as matching cases take precedence over matchers\r\n         */\r\n        if (actionMatchers.length > 0) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addMatcher`'\r\n          )\r\n        }\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      const type =\r\n        typeof typeOrActionCreator === 'string'\r\n          ? typeOrActionCreator\r\n          : typeOrActionCreator.type\r\n      if (type in actionsMap) {\r\n        throw new Error(\r\n          'addCase cannot be called with two reducers for the same action type'\r\n        )\r\n      }\r\n      actionsMap[type] = reducer\r\n      return builder\r\n    },\r\n    addMatcher<A extends AnyAction>(\r\n      matcher: ActionMatcher<A>,\r\n      reducer: CaseReducer<S, A>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      actionMatchers.push({ matcher, reducer })\r\n      return builder\r\n    },\r\n    addDefaultCase(reducer: CaseReducer<S, AnyAction>) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error('`builder.addDefaultCase` can only be called once')\r\n        }\r\n      }\r\n      defaultCaseReducer = reducer\r\n      return builder\r\n    }\r\n  }\r\n  builderCallback(builder)\r\n  return [actionsMap, actionMatchers, defaultCaseReducer]\r\n}\r\n","import createNextState, { Draft, isDraft, isDraftable } from 'immer'\r\nimport { AnyAction, Action, Reducer } from 'redux'\r\nimport {\r\n  executeReducerBuilderCallback,\r\n  ActionReducerMapBuilder\r\n} from './mapBuilders'\r\nimport { NoInfer } from './tsHelpers'\r\n\r\n/**\r\n * Defines a mapping from action types to corresponding action object shapes.\r\n *\r\n * @deprecated This should not be used manually - it is only used for internal\r\n *             inference purposes and should not have any further value.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type Actions<T extends keyof any = string> = Record<T, Action>\r\n\r\nexport interface ActionMatcher<A extends AnyAction> {\r\n  (action: AnyAction): action is A\r\n}\r\n\r\nexport type ActionMatcherDescription<S, A extends AnyAction> = {\r\n  matcher: ActionMatcher<A>\r\n  reducer: CaseReducer<S, NoInfer<A>>\r\n}\r\n\r\nexport type ActionMatcherDescriptionCollection<S> = Array<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\n/**\r\n * An *case reducer* is a reducer function for a specific action type. Case\r\n * reducers can be composed to full reducers using `createReducer()`.\r\n *\r\n * Unlike a normal Redux reducer, a case reducer is never called with an\r\n * `undefined` state to determine the initial state. Instead, the initial\r\n * state is explicitly specified as an argument to `createReducer()`.\r\n *\r\n * In addition, a case reducer can choose to mutate the passed-in `state`\r\n * value directly instead of returning a new state. This does not actually\r\n * cause the store state to be mutated directly; instead, thanks to\r\n * [immer](https://github.com/mweststrate/immer), the mutations are\r\n * translated to copy operations that result in a new state.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducer<S = any, A extends Action = AnyAction> = (\r\n  state: Draft<S>,\r\n  action: A\r\n) => S | void | Draft<S>\r\n\r\n/**\r\n * A mapping from action types to case reducers for `createReducer()`.\r\n *\r\n * @deprecated This should not be used manually - it is only used\r\n *             for internal inference purposes and using it manually\r\n *             would lead to type erasure.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type CaseReducers<S, AS extends Actions> = {\r\n  [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void\r\n}\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * @remarks\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @overloadSummary\r\n * This overload accepts a callback function that receives a `builder` object as its argument.\r\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\r\n * called to define what actions this reducer will handle.\r\n *\r\n * @param initialState - The initial state that should be used when the reducer is called the first time.\r\n * @param builderCallback - A callback that receives a *builder* object to define\r\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AnyAction,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst increment = createAction<number>(\"increment\");\r\nconst decrement = createAction<number>(\"decrement\");\r\n\r\nfunction isActionWithNumberPayload(\r\n  action: AnyAction\r\n): action is PayloadAction<number> {\r\n  return typeof action.payload === \"number\";\r\n}\r\n\r\ncreateReducer(\r\n  {\r\n    counter: 0,\r\n    sumOfNumberPayloads: 0,\r\n    unhandledActions: 0,\r\n  },\r\n  (builder) => {\r\n    builder\r\n      .addCase(increment, (state, action) => {\r\n        // action is inferred correctly here\r\n        state.counter += action.payload;\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {\r\n        state.counter -= action.payload;\r\n      })\r\n      // You can apply a \"matcher function\" to incoming actions\r\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {});\r\n  }\r\n);\r\n```\r\n * @public\r\n */\r\nexport function createReducer<S>(\r\n  initialState: S,\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): Reducer<S>\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n * \r\n * @overloadSummary\r\n * This overload accepts an object where the keys are string action types, and the values\r\n * are case reducer functions to handle those action types.\r\n *\r\n * @param initialState - The initial state that should be used when the reducer is called the first time.\r\n * @param actionsMap - An object mapping from action types to _case reducers_, each of which handles one specific action type.\r\n * @param actionMatchers - An array of matcher definitions in the form `{matcher, reducer}`.\r\n *   All matching reducers will be executed in order, independently if a case reducer matched or not.\r\n * @param defaultCaseReducer - A \"default case\" reducer that is executed if no case reducer and no matcher\r\n *   reducer was executed for this action.\r\n *\r\n * @example\r\n```js\r\nconst counterReducer = createReducer(0, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n```\r\n \r\n * Action creators that were generated using [`createAction`](./createAction) may be used directly as the keys here, using computed property syntax:\r\n\r\n```js\r\nconst increment = createAction('increment')\r\nconst decrement = createAction('decrement')\r\n\r\nconst counterReducer = createReducer(0, {\r\n  [increment]: (state, action) => state + action.payload,\r\n  [decrement.type]: (state, action) => state - action.payload\r\n})\r\n```\r\n * @public\r\n */\r\nexport function createReducer<\r\n  S,\r\n  CR extends CaseReducers<S, any> = CaseReducers<S, any>\r\n>(\r\n  initialState: S,\r\n  actionsMap: CR,\r\n  actionMatchers?: ActionMatcherDescriptionCollection<S>,\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): Reducer<S>\r\n\r\nexport function createReducer<S>(\r\n  initialState: S,\r\n  mapOrBuilderCallback:\r\n    | CaseReducers<S, any>\r\n    | ((builder: ActionReducerMapBuilder<S>) => void),\r\n  actionMatchers: ActionMatcherDescriptionCollection<S> = [],\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): Reducer<S> {\r\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] =\r\n    typeof mapOrBuilderCallback === 'function'\r\n      ? executeReducerBuilderCallback(mapOrBuilderCallback)\r\n      : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer]\r\n\r\n  const frozenInitialState = createNextState(initialState, () => {})\r\n\r\n  return function(state = frozenInitialState, action): S {\r\n    let caseReducers = [\r\n      actionsMap[action.type],\r\n      ...finalActionMatchers\r\n        .filter(({ matcher }) => matcher(action))\r\n        .map(({ reducer }) => reducer)\r\n    ]\r\n    if (caseReducers.filter(cr => !!cr).length === 0) {\r\n      caseReducers = [finalDefaultCaseReducer]\r\n    }\r\n\r\n    return caseReducers.reduce((previousState, caseReducer): S => {\r\n      if (caseReducer) {\r\n        if (isDraft(previousState)) {\r\n          // If it's already a draft, we must already be inside a `createNextState` call,\r\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\r\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\r\n          const draft = previousState as Draft<S> // We can assume this is already a draft\r\n          const result = caseReducer(draft, action)\r\n\r\n          if (typeof result === 'undefined') {\r\n            return previousState\r\n          }\r\n\r\n          return result as S\r\n        } else if (!isDraftable(previousState)) {\r\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\r\n          // return the caseReducer func and not wrap it with produce.\r\n          const result = caseReducer(previousState as any, action)\r\n\r\n          if (typeof result === 'undefined') {\r\n            if (previousState === null) {\r\n              return previousState\r\n            }\r\n            throw Error(\r\n              'A case reducer on a non-draftable value must not return undefined'\r\n            )\r\n          }\r\n\r\n          return result as S\r\n        } else {\r\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n          // these two types.\r\n          return createNextState(previousState, (draft: Draft<S>) => {\r\n            return caseReducer(draft, action)\r\n          })\r\n        }\r\n      }\r\n\r\n      return previousState\r\n    }, state)\r\n  }\r\n}\r\n","import { Reducer } from 'redux'\r\nimport {\r\n  ActionCreatorWithoutPayload,\r\n  createAction,\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  PrepareAction,\r\n  _ActionCreatorWithPreparedPayload\r\n} from './createAction'\r\nimport { CaseReducer, CaseReducers, createReducer } from './createReducer'\r\nimport {\r\n  ActionReducerMapBuilder,\r\n  executeReducerBuilderCallback\r\n} from './mapBuilders'\r\nimport { NoInfer } from './tsHelpers'\r\n\r\n/**\r\n * An action creator attached to a slice.\r\n *\r\n * @deprecated please use PayloadActionCreator directly\r\n *\r\n * @public\r\n */\r\nexport type SliceActionCreator<P> = PayloadActionCreator<P>\r\n\r\n/**\r\n * The return value of `createSlice`\r\n *\r\n * @public\r\n */\r\nexport interface Slice<\r\n  State = any,\r\n  CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice name.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The slice's reducer.\r\n   */\r\n  reducer: Reducer<State>\r\n\r\n  /**\r\n   * Action creators for the types of actions that are handled by the slice\r\n   * reducer.\r\n   */\r\n  actions: CaseReducerActions<CaseReducers>\r\n\r\n  /**\r\n   * The individual case reducer functions that were passed in the `reducers` parameter.\r\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\r\n   */\r\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>\r\n}\r\n\r\n/**\r\n * Options for `createSlice()`.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSliceOptions<\r\n  State = any,\r\n  CR extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice's name. Used to namespace the generated action types.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The initial state to be returned by the slice reducer.\r\n   */\r\n  initialState: State\r\n\r\n  /**\r\n   * A mapping from action types to action-type-specific *case reducer*\r\n   * functions. For every action type, a matching action creator will be\r\n   * generated using `createAction()`.\r\n   */\r\n  reducers: ValidateSliceCaseReducers<State, CR>\r\n\r\n  /**\r\n   * A callback that receives a *builder* object to define\r\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n   * \r\n   * Alternatively, a mapping from action types to action-type-specific *case reducer*\r\n   * functions. These reducers should have existing action types used\r\n   * as the keys, and action creators will _not_ be generated.\r\n   * \r\n   * @example\r\n```ts\r\nimport { createAction, createSlice, Action, AnyAction } from '@reduxjs/toolkit'\r\nconst incrementBy = createAction<number>('incrementBy')\r\nconst decrement = createAction('decrement')\r\n\r\ninterface RejectedAction extends Action {\r\n  error: Error\r\n}\r\n\r\nfunction isRejectedAction(action: AnyAction): action is RejectedAction {\r\n  return action.type.endsWith('rejected')\r\n}\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  initialState: 0,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(incrementBy, (state, action) => {\r\n        // action is inferred correctly here if using TS\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {})\r\n      // You can match a range of action types\r\n      .addMatcher(\r\n        isRejectedAction,\r\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\r\n        (state, action) => {}\r\n      )\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {})\r\n    }\r\n})\r\n```\r\n   */\r\n  extraReducers?:\r\n    | CaseReducers<NoInfer<State>, any>\r\n    | ((builder: ActionReducerMapBuilder<NoInfer<State>>) => void)\r\n}\r\n\r\n/**\r\n * A CaseReducer with a `prepare` method.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\r\n  reducer: CaseReducer<State, Action>\r\n  prepare: PrepareAction<Action['payload']>\r\n}\r\n\r\n/**\r\n * The type describing a slice's `reducers` option.\r\n *\r\n * @public\r\n */\r\nexport type SliceCaseReducers<State> = {\r\n  [K: string]:\r\n    | CaseReducer<State, PayloadAction<any>>\r\n    | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>\r\n}\r\n\r\n/**\r\n * Derives the slice's `actions` property from the `reducers` options\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerActions<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends { prepare: any }\r\n    ? ActionCreatorForCaseReducerWithPrepare<CaseReducers[Type]>\r\n    : ActionCreatorForCaseReducer<CaseReducers[Type]>\r\n}\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducerWithPrepare<\r\n  CR extends { prepare: any }\r\n> = _ActionCreatorWithPreparedPayload<CR['prepare'], string>\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducer<CR> = CR extends (\r\n  state: any,\r\n  action: infer Action\r\n) => any\r\n  ? Action extends { payload: infer P }\r\n    ? PayloadActionCreator<P>\r\n    : ActionCreatorWithoutPayload\r\n  : ActionCreatorWithoutPayload\r\n\r\n/**\r\n * Extracts the CaseReducers out of a `reducers` object, even if they are\r\n * tested into a `CaseReducerWithPrepare`.\r\n *\r\n * @internal\r\n */\r\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends {\r\n    reducer: infer Reducer\r\n  }\r\n    ? Reducer\r\n    : CaseReducers[Type]\r\n}\r\n\r\n/**\r\n * Used on a SliceCaseReducers object.\r\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\r\n * the `reducer` and the `prepare` function use the same type of `payload`.\r\n *\r\n * Might do additional such checks in the future.\r\n *\r\n * This type is only ever useful if you want to write your own wrapper around\r\n * `createSlice`. Please don't use it otherwise!\r\n *\r\n * @public\r\n */\r\nexport type ValidateSliceCaseReducers<\r\n  S,\r\n  ACR extends SliceCaseReducers<S>\r\n> = ACR &\r\n  {\r\n    [T in keyof ACR]: ACR[T] extends {\r\n      reducer(s: S, action?: infer A): any\r\n    }\r\n      ? {\r\n          prepare(...a: never[]): Omit<A, 'type'>\r\n        }\r\n      : {}\r\n  }\r\n\r\nfunction getType(slice: string, actionKey: string): string {\r\n  return `${slice}/${actionKey}`\r\n}\r\n\r\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\r\nexport function createSlice<\r\n  State,\r\n  CaseReducers extends SliceCaseReducers<State>,\r\n  Name extends string = string\r\n>(\r\n  options: CreateSliceOptions<State, CaseReducers, Name>\r\n): Slice<State, CaseReducers, Name> {\r\n  const { name, initialState } = options\r\n  if (!name) {\r\n    throw new Error('`name` is a required option for createSlice')\r\n  }\r\n  const reducers = options.reducers || {}\r\n  const [\r\n    extraReducers = {},\r\n    actionMatchers = [],\r\n    defaultCaseReducer = undefined\r\n  ] =\r\n    typeof options.extraReducers === 'undefined'\r\n      ? []\r\n      : typeof options.extraReducers === 'function'\r\n      ? executeReducerBuilderCallback(options.extraReducers)\r\n      : [options.extraReducers]\r\n\r\n  const reducerNames = Object.keys(reducers)\r\n\r\n  const sliceCaseReducersByName: Record<string, CaseReducer> = {}\r\n  const sliceCaseReducersByType: Record<string, CaseReducer> = {}\r\n  const actionCreators: Record<string, Function> = {}\r\n\r\n  reducerNames.forEach(reducerName => {\r\n    const maybeReducerWithPrepare = reducers[reducerName]\r\n    const type = getType(name, reducerName)\r\n\r\n    let caseReducer: CaseReducer<State, any>\r\n    let prepareCallback: PrepareAction<any> | undefined\r\n\r\n    if ('reducer' in maybeReducerWithPrepare) {\r\n      caseReducer = maybeReducerWithPrepare.reducer\r\n      prepareCallback = maybeReducerWithPrepare.prepare\r\n    } else {\r\n      caseReducer = maybeReducerWithPrepare\r\n    }\r\n\r\n    sliceCaseReducersByName[reducerName] = caseReducer\r\n    sliceCaseReducersByType[type] = caseReducer\r\n    actionCreators[reducerName] = prepareCallback\r\n      ? createAction(type, prepareCallback)\r\n      : createAction(type)\r\n  })\r\n\r\n  const finalCaseReducers = { ...extraReducers, ...sliceCaseReducersByType }\r\n  const reducer = createReducer(\r\n    initialState,\r\n    finalCaseReducers as any,\r\n    actionMatchers,\r\n    defaultCaseReducer\r\n  )\r\n\r\n  return {\r\n    name,\r\n    reducer,\r\n    actions: actionCreators as any,\r\n    caseReducers: sliceCaseReducersByName as any\r\n  }\r\n}\r\n","import { EntityState } from './models'\r\n\r\nexport function getInitialEntityState<V>(): EntityState<V> {\r\n  return {\r\n    ids: [],\r\n    entities: {}\r\n  }\r\n}\r\n\r\nexport function createInitialStateFactory<V>() {\r\n  function getInitialState(): EntityState<V>\r\n  function getInitialState<S extends object>(\r\n    additionalState: S\r\n  ): EntityState<V> & S\r\n  function getInitialState(additionalState: any = {}): any {\r\n    return Object.assign(getInitialEntityState(), additionalState)\r\n  }\r\n\r\n  return { getInitialState }\r\n}\r\n","import { createDraftSafeSelector } from '../createDraftSafeSelector'\r\nimport { EntityState, EntitySelectors, Dictionary, EntityId } from './models'\r\n\r\nexport function createSelectorsFactory<T>() {\r\n  function getSelectors(): EntitySelectors<T, EntityState<T>>\r\n  function getSelectors<V>(\r\n    selectState: (state: V) => EntityState<T>\r\n  ): EntitySelectors<T, V>\r\n  function getSelectors(\r\n    selectState?: (state: any) => EntityState<T>\r\n  ): EntitySelectors<T, any> {\r\n    const selectIds = (state: any) => state.ids\r\n\r\n    const selectEntities = (state: EntityState<T>) => state.entities\r\n\r\n    const selectAll = createDraftSafeSelector(\r\n      selectIds,\r\n      selectEntities,\r\n      (ids: T[], entities: Dictionary<T>): any =>\r\n        ids.map((id: any) => (entities as any)[id])\r\n    )\r\n\r\n    const selectId = (_: any, id: EntityId) => id\r\n\r\n    const selectById = (entities: Dictionary<T>, id: EntityId) => entities[id]\r\n\r\n    const selectTotal = createDraftSafeSelector(selectIds, ids => ids.length)\r\n\r\n    if (!selectState) {\r\n      return {\r\n        selectIds,\r\n        selectEntities,\r\n        selectAll,\r\n        selectTotal,\r\n        selectById: createDraftSafeSelector(\r\n          selectEntities,\r\n          selectId,\r\n          selectById\r\n        )\r\n      }\r\n    }\r\n\r\n    const selectGlobalizedEntities = createDraftSafeSelector(\r\n      selectState,\r\n      selectEntities\r\n    )\r\n\r\n    return {\r\n      selectIds: createDraftSafeSelector(selectState, selectIds),\r\n      selectEntities: selectGlobalizedEntities,\r\n      selectAll: createDraftSafeSelector(selectState, selectAll),\r\n      selectTotal: createDraftSafeSelector(selectState, selectTotal),\r\n      selectById: createDraftSafeSelector(\r\n        selectGlobalizedEntities,\r\n        selectId,\r\n        selectById\r\n      )\r\n    }\r\n  }\r\n\r\n  return { getSelectors }\r\n}\r\n","import createNextState, { isDraft } from 'immer'\r\nimport { EntityState, PreventAny } from './models'\r\nimport { PayloadAction, isFSA } from '../createAction'\r\n\r\nexport function createSingleArgumentStateOperator<V>(\r\n  mutator: (state: EntityState<V>) => void\r\n) {\r\n  const operator = createStateOperator((_: undefined, state: EntityState<V>) =>\r\n    mutator(state)\r\n  )\r\n\r\n  return function operation<S extends EntityState<V>>(\r\n    state: PreventAny<S, V>\r\n  ): S {\r\n    return operator(state as S, undefined)\r\n  }\r\n}\r\n\r\nexport function createStateOperator<V, R>(\r\n  mutator: (arg: R, state: EntityState<V>) => void\r\n) {\r\n  return function operation<S extends EntityState<V>>(\r\n    state: S,\r\n    arg: R | PayloadAction<R>\r\n  ): S {\r\n    function isPayloadActionArgument(\r\n      arg: R | PayloadAction<R>\r\n    ): arg is PayloadAction<R> {\r\n      return isFSA(arg)\r\n    }\r\n\r\n    const runMutator = (draft: EntityState<V>) => {\r\n      if (isPayloadActionArgument(arg)) {\r\n        mutator(arg.payload, draft)\r\n      } else {\r\n        mutator(arg, draft)\r\n      }\r\n    }\r\n\r\n    if (isDraft(state)) {\r\n      // we must already be inside a `createNextState` call, likely because\r\n      // this is being wrapped in `createReducer` or `createSlice`.\r\n      // It's safe to just pass the draft to the mutator.\r\n      runMutator(state)\r\n\r\n      // since it's a draft, we'll just return it\r\n      return state\r\n    } else {\r\n      // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n      // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n      // these two types.\r\n      return createNextState(state, runMutator)\r\n    }\r\n  }\r\n}\r\n","import { IdSelector } from './models'\r\n\r\nexport function selectIdValue<T>(entity: T, selectId: IdSelector<T>) {\r\n  const key = selectId(entity)\r\n\r\n  if (process.env.NODE_ENV !== 'production' && key === undefined) {\r\n    console.warn(\r\n      'The entity passed to the `selectId` implementation returned undefined.',\r\n      'You should probably provide your own `selectId` implementation.',\r\n      'The entity that was passed:',\r\n      entity,\r\n      'The `selectId` implementation:',\r\n      selectId.toString()\r\n    )\r\n  }\r\n\r\n  return key\r\n}\r\n","import {\r\n  EntityState,\r\n  EntityStateAdapter,\r\n  IdSelector,\r\n  Update,\r\n  EntityId\r\n} from './models'\r\nimport {\r\n  createStateOperator,\r\n  createSingleArgumentStateOperator\r\n} from './state_adapter'\r\nimport { selectIdValue } from './utils'\r\n\r\nexport function createUnsortedStateAdapter<T>(\r\n  selectId: IdSelector<T>\r\n): EntityStateAdapter<T> {\r\n  type R = EntityState<T>\r\n\r\n  function addOneMutably(entity: T, state: R): void {\r\n    const key = selectIdValue(entity, selectId)\r\n\r\n    if (key in state.entities) {\r\n      return\r\n    }\r\n\r\n    state.ids.push(key)\r\n    state.entities[key] = entity\r\n  }\r\n\r\n  function addManyMutably(entities: T[] | Record<EntityId, T>, state: R): void {\r\n    if (!Array.isArray(entities)) {\r\n      entities = Object.values(entities)\r\n    }\r\n\r\n    for (const entity of entities) {\r\n      addOneMutably(entity, state)\r\n    }\r\n  }\r\n\r\n  function setAllMutably(entities: T[] | Record<EntityId, T>, state: R): void {\r\n    if (!Array.isArray(entities)) {\r\n      entities = Object.values(entities)\r\n    }\r\n\r\n    state.ids = []\r\n    state.entities = {}\r\n\r\n    addManyMutably(entities, state)\r\n  }\r\n\r\n  function removeOneMutably(key: EntityId, state: R): void {\r\n    return removeManyMutably([key], state)\r\n  }\r\n\r\n  function removeManyMutably(keys: EntityId[], state: R): void {\r\n    let didMutate = false\r\n\r\n    keys.forEach(key => {\r\n      if (key in state.entities) {\r\n        delete state.entities[key]\r\n        didMutate = true\r\n      }\r\n    })\r\n\r\n    if (didMutate) {\r\n      state.ids = state.ids.filter(id => id in state.entities)\r\n    }\r\n  }\r\n\r\n  function removeAllMutably(state: R): void {\r\n    Object.assign(state, {\r\n      ids: [],\r\n      entities: {}\r\n    })\r\n  }\r\n\r\n  function takeNewKey(\r\n    keys: { [id: string]: EntityId },\r\n    update: Update<T>,\r\n    state: R\r\n  ): boolean {\r\n    const original = state.entities[update.id]\r\n    const updated: T = Object.assign({}, original, update.changes)\r\n    const newKey = selectIdValue(updated, selectId)\r\n    const hasNewKey = newKey !== update.id\r\n\r\n    if (hasNewKey) {\r\n      keys[update.id] = newKey\r\n      delete state.entities[update.id]\r\n    }\r\n\r\n    state.entities[newKey] = updated\r\n\r\n    return hasNewKey\r\n  }\r\n\r\n  function updateOneMutably(update: Update<T>, state: R): void {\r\n    return updateManyMutably([update], state)\r\n  }\r\n\r\n  function updateManyMutably(updates: Update<T>[], state: R): void {\r\n    const newKeys: { [id: string]: EntityId } = {}\r\n\r\n    const updatesPerEntity: { [id: string]: Update<T> } = {}\r\n\r\n    updates.forEach(update => {\r\n      // Only apply updates to entities that currently exist\r\n      if (update.id in state.entities) {\r\n        // If there are multiple updates to one entity, merge them together\r\n        updatesPerEntity[update.id] = {\r\n          id: update.id,\r\n          // Spreads ignore falsy values, so this works even if there isn't\r\n          // an existing update already at this key\r\n          changes: {\r\n            ...(updatesPerEntity[update.id]\r\n              ? updatesPerEntity[update.id].changes\r\n              : null),\r\n            ...update.changes\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    updates = Object.values(updatesPerEntity)\r\n\r\n    const didMutateEntities = updates.length > 0\r\n\r\n    if (didMutateEntities) {\r\n      const didMutateIds =\r\n        updates.filter(update => takeNewKey(newKeys, update, state)).length > 0\r\n\r\n      if (didMutateIds) {\r\n        state.ids = state.ids.map(id => newKeys[id] || id)\r\n      }\r\n    }\r\n  }\r\n\r\n  function upsertOneMutably(entity: T, state: R): void {\r\n    return upsertManyMutably([entity], state)\r\n  }\r\n\r\n  function upsertManyMutably(\r\n    entities: T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    if (!Array.isArray(entities)) {\r\n      entities = Object.values(entities)\r\n    }\r\n\r\n    const added: T[] = []\r\n    const updated: Update<T>[] = []\r\n\r\n    for (const entity of entities) {\r\n      const id = selectIdValue(entity, selectId)\r\n      if (id in state.entities) {\r\n        updated.push({ id, changes: entity })\r\n      } else {\r\n        added.push(entity)\r\n      }\r\n    }\r\n\r\n    updateManyMutably(updated, state)\r\n    addManyMutably(added, state)\r\n  }\r\n\r\n  return {\r\n    removeAll: createSingleArgumentStateOperator(removeAllMutably),\r\n    addOne: createStateOperator(addOneMutably),\r\n    addMany: createStateOperator(addManyMutably),\r\n    setAll: createStateOperator(setAllMutably),\r\n    updateOne: createStateOperator(updateOneMutably),\r\n    updateMany: createStateOperator(updateManyMutably),\r\n    upsertOne: createStateOperator(upsertOneMutably),\r\n    upsertMany: createStateOperator(upsertManyMutably),\r\n    removeOne: createStateOperator(removeOneMutably),\r\n    removeMany: createStateOperator(removeManyMutably)\r\n  }\r\n}\r\n","import {\r\n  EntityState,\r\n  IdSelector,\r\n  Comparer,\r\n  EntityStateAdapter,\r\n  Update,\r\n  EntityId\r\n} from './models'\r\nimport { createStateOperator } from './state_adapter'\r\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter'\r\nimport { selectIdValue } from './utils'\r\n\r\nexport function createSortedStateAdapter<T>(\r\n  selectId: IdSelector<T>,\r\n  sort: Comparer<T>\r\n): EntityStateAdapter<T> {\r\n  type R = EntityState<T>\r\n\r\n  const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(\r\n    selectId\r\n  )\r\n\r\n  function addOneMutably(entity: T, state: R): void {\r\n    return addManyMutably([entity], state)\r\n  }\r\n\r\n  function addManyMutably(\r\n    newModels: T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    if (!Array.isArray(newModels)) {\r\n      newModels = Object.values(newModels)\r\n    }\r\n\r\n    const models = newModels.filter(\r\n      model => !(selectIdValue(model, selectId) in state.entities)\r\n    )\r\n\r\n    if (models.length !== 0) {\r\n      merge(models, state)\r\n    }\r\n  }\r\n\r\n  function setAllMutably(models: T[] | Record<EntityId, T>, state: R): void {\r\n    if (!Array.isArray(models)) {\r\n      models = Object.values(models)\r\n    }\r\n    state.entities = {}\r\n    state.ids = []\r\n\r\n    addManyMutably(models, state)\r\n  }\r\n\r\n  function updateOneMutably(update: Update<T>, state: R): void {\r\n    return updateManyMutably([update], state)\r\n  }\r\n\r\n  function takeUpdatedModel(models: T[], update: Update<T>, state: R): boolean {\r\n    if (!(update.id in state.entities)) {\r\n      return false\r\n    }\r\n\r\n    const original = state.entities[update.id]\r\n    const updated = Object.assign({}, original, update.changes)\r\n    const newKey = selectIdValue(updated, selectId)\r\n\r\n    delete state.entities[update.id]\r\n\r\n    models.push(updated)\r\n\r\n    return newKey !== update.id\r\n  }\r\n\r\n  function updateManyMutably(updates: Update<T>[], state: R): void {\r\n    const models: T[] = []\r\n\r\n    updates.forEach(update => takeUpdatedModel(models, update, state))\r\n\r\n    if (models.length !== 0) {\r\n      merge(models, state)\r\n    }\r\n  }\r\n\r\n  function upsertOneMutably(entity: T, state: R): void {\r\n    return upsertManyMutably([entity], state)\r\n  }\r\n\r\n  function upsertManyMutably(\r\n    entities: T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    if (!Array.isArray(entities)) {\r\n      entities = Object.values(entities)\r\n    }\r\n\r\n    const added: T[] = []\r\n    const updated: Update<T>[] = []\r\n\r\n    for (const entity of entities) {\r\n      const id = selectIdValue(entity, selectId)\r\n      if (id in state.entities) {\r\n        updated.push({ id, changes: entity })\r\n      } else {\r\n        added.push(entity)\r\n      }\r\n    }\r\n\r\n    updateManyMutably(updated, state)\r\n    addManyMutably(added, state)\r\n  }\r\n\r\n  function areArraysEqual(a: unknown[], b: unknown[]) {\r\n    if (a.length !== b.length) {\r\n      return false\r\n    }\r\n\r\n    for (let i = 0; i < a.length && i < b.length; i++) {\r\n      if (a[i] === b[i]) {\r\n        continue\r\n      }\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  function merge(models: T[], state: R): void {\r\n    models.sort(sort)\r\n\r\n    // Insert/overwrite all new/updated\r\n    models.forEach(model => {\r\n      state.entities[selectId(model)] = model\r\n    })\r\n\r\n    const allEntities = Object.values(state.entities) as T[]\r\n    allEntities.sort(sort)\r\n\r\n    const newSortedIds = allEntities.map(selectId)\r\n    const { ids } = state\r\n\r\n    if (!areArraysEqual(ids, newSortedIds)) {\r\n      state.ids = newSortedIds\r\n    }\r\n  }\r\n\r\n  return {\r\n    removeOne,\r\n    removeMany,\r\n    removeAll,\r\n    addOne: createStateOperator(addOneMutably),\r\n    updateOne: createStateOperator(updateOneMutably),\r\n    upsertOne: createStateOperator(upsertOneMutably),\r\n    setAll: createStateOperator(setAllMutably),\r\n    addMany: createStateOperator(addManyMutably),\r\n    updateMany: createStateOperator(updateManyMutably),\r\n    upsertMany: createStateOperator(upsertManyMutably)\r\n  }\r\n}\r\n","import { EntityDefinition, Comparer, IdSelector, EntityAdapter } from './models'\r\nimport { createInitialStateFactory } from './entity_state'\r\nimport { createSelectorsFactory } from './state_selectors'\r\nimport { createSortedStateAdapter } from './sorted_state_adapter'\r\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter'\r\n\r\n/**\r\n *\r\n * @param options\r\n *\r\n * @public\r\n */\r\nexport function createEntityAdapter<T>(\r\n  options: {\r\n    selectId?: IdSelector<T>\r\n    sortComparer?: false | Comparer<T>\r\n  } = {}\r\n): EntityAdapter<T> {\r\n  const { selectId, sortComparer }: EntityDefinition<T> = {\r\n    sortComparer: false,\r\n    selectId: (instance: any) => instance.id,\r\n    ...options\r\n  }\r\n\r\n  const stateFactory = createInitialStateFactory<T>()\r\n  const selectorsFactory = createSelectorsFactory<T>()\r\n  const stateAdapter = sortComparer\r\n    ? createSortedStateAdapter(selectId, sortComparer)\r\n    : createUnsortedStateAdapter(selectId)\r\n\r\n  return {\r\n    selectId,\r\n    sortComparer,\r\n    ...stateFactory,\r\n    ...selectorsFactory,\r\n    ...stateAdapter\r\n  }\r\n}\r\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\r\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\r\n// optimize the gzip compression for this alphabet.\r\nlet urlAlphabet =\r\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\r\n\r\n/**\r\n *\r\n * @public\r\n */\r\nexport let nanoid = (size = 21) => {\r\n  let id = ''\r\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\r\n  let i = size\r\n  while (i--) {\r\n    // `| 0` is more compact and faster than `Math.floor()`.\r\n    id += urlAlphabet[(Math.random() * 64) | 0]\r\n  }\r\n  return id\r\n}\r\n","import { Dispatch, AnyAction } from 'redux'\r\nimport {\r\n  createAction,\r\n  PayloadAction,\r\n  ActionCreatorWithPreparedPayload\r\n} from './createAction'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { FallbackIfUnknown, IsAny } from './tsHelpers'\r\nimport { nanoid } from './nanoid'\r\n\r\n// @ts-ignore we need the import of these types due to a bundling issue.\r\ntype _Keep = PayloadAction | ActionCreatorWithPreparedPayload<any, unknown>\r\n\r\nexport type BaseThunkAPI<\r\n  S,\r\n  E,\r\n  D extends Dispatch = Dispatch,\r\n  RejectedValue = undefined\r\n> = {\r\n  dispatch: D\r\n  getState: () => S\r\n  extra: E\r\n  requestId: string\r\n  signal: AbortSignal\r\n  rejectWithValue(value: RejectedValue): RejectWithValue<RejectedValue>\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface SerializedError {\r\n  name?: string\r\n  message?: string\r\n  stack?: string\r\n  code?: string\r\n}\r\n\r\nconst commonProperties: Array<keyof SerializedError> = [\r\n  'name',\r\n  'message',\r\n  'stack',\r\n  'code'\r\n]\r\n\r\nclass RejectWithValue<RejectValue> {\r\n  public name = 'RejectWithValue'\r\n  public message = 'Rejected'\r\n  constructor(public readonly payload: RejectValue) {}\r\n}\r\n\r\n// Reworked from https://github.com/sindresorhus/serialize-error\r\nexport const miniSerializeError = (value: any): SerializedError => {\r\n  if (typeof value === 'object' && value !== null) {\r\n    const simpleError: SerializedError = {}\r\n    for (const property of commonProperties) {\r\n      if (typeof value[property] === 'string') {\r\n        simpleError[property] = value[property]\r\n      }\r\n    }\r\n\r\n    return simpleError\r\n  }\r\n\r\n  return { message: String(value) }\r\n}\r\n\r\ntype AsyncThunkConfig = {\r\n  state?: unknown\r\n  dispatch?: Dispatch\r\n  extra?: unknown\r\n  rejectValue?: unknown\r\n  serializedErrorType?: unknown\r\n}\r\n\r\ntype GetState<ThunkApiConfig> = ThunkApiConfig extends {\r\n  state: infer State\r\n}\r\n  ? State\r\n  : unknown\r\ntype GetExtra<ThunkApiConfig> = ThunkApiConfig extends { extra: infer Extra }\r\n  ? Extra\r\n  : unknown\r\ntype GetDispatch<ThunkApiConfig> = ThunkApiConfig extends {\r\n  dispatch: infer Dispatch\r\n}\r\n  ? FallbackIfUnknown<\r\n      Dispatch,\r\n      ThunkDispatch<\r\n        GetState<ThunkApiConfig>,\r\n        GetExtra<ThunkApiConfig>,\r\n        AnyAction\r\n      >\r\n    >\r\n  : ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, AnyAction>\r\n\r\ntype GetThunkAPI<ThunkApiConfig> = BaseThunkAPI<\r\n  GetState<ThunkApiConfig>,\r\n  GetExtra<ThunkApiConfig>,\r\n  GetDispatch<ThunkApiConfig>,\r\n  GetRejectValue<ThunkApiConfig>\r\n>\r\n\r\ntype GetRejectValue<ThunkApiConfig> = ThunkApiConfig extends {\r\n  rejectValue: infer RejectValue\r\n}\r\n  ? RejectValue\r\n  : unknown\r\n\r\ntype GetSerializedErrorType<ThunkApiConfig> = ThunkApiConfig extends {\r\n  serializedErrorType: infer GetSerializedErrorType\r\n}\r\n  ? GetSerializedErrorType\r\n  : SerializedError\r\n\r\n/**\r\n * A type describing the return value of the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreatorReturnValue<\r\n  Returned,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> =\r\n  | Promise<Returned | RejectWithValue<GetRejectValue<ThunkApiConfig>>>\r\n  | Returned\r\n  | RejectWithValue<GetRejectValue<ThunkApiConfig>>\r\n/**\r\n * A type describing the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreator<\r\n  Returned,\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> = (\r\n  arg: ThunkArg,\r\n  thunkAPI: GetThunkAPI<ThunkApiConfig>\r\n) => AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig>\r\n\r\n/**\r\n * A ThunkAction created by `createAsyncThunk`.\r\n * Dispatching it returns a Promise for either a\r\n * fulfilled or rejected action.\r\n * Also, the returned value contains a `abort()` method\r\n * that allows the asyncAction to be cancelled from the outside.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkAction<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = (\r\n  dispatch: GetDispatch<ThunkApiConfig>,\r\n  getState: () => GetState<ThunkApiConfig>,\r\n  extra: GetExtra<ThunkApiConfig>\r\n) => Promise<\r\n  | ReturnType<AsyncThunkFulfilledActionCreator<Returned, ThunkArg>>\r\n  | ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>>\r\n> & {\r\n  abort(reason?: string): void\r\n  requestId: string\r\n  arg: ThunkArg\r\n}\r\n\r\ntype AsyncThunkActionCreator<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = IsAny<\r\n  ThunkArg,\r\n  // any handling\r\n  (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n  // unknown handling\r\n  unknown extends ThunkArg\r\n    ? (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument not specified or specified as void or undefined\r\n    : [ThunkArg] extends [void] | [undefined]\r\n    ? () => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains void\r\n    : [void] extends [ThunkArg] // make optional\r\n    ? (arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains undefined\r\n    : [undefined] extends [ThunkArg]\r\n    ? WithStrictNullChecks<\r\n        // with strict nullChecks: make optional\r\n        (\r\n          arg?: ThunkArg\r\n        ) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n        // without strict null checks this will match everything, so don't make it optional\r\n        (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n      > // default case: normal argument\r\n    : (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n>\r\n\r\ninterface AsyncThunkOptions<\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> {\r\n  /**\r\n   * A method to control whether the asyncThunk should be executed. Has access to the\r\n   * `arg`, `api.getState()` and `api.extra` arguments.\r\n   *\r\n   * @returns `false` if it should be skipped\r\n   */\r\n  condition?(\r\n    arg: ThunkArg,\r\n    api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n  ): boolean | undefined\r\n  /**\r\n   * If `condition` returns `false`, the asyncThunk will be skipped.\r\n   * This option allows you to control whether a `rejected` action with `meta.condition == false`\r\n   * will be dispatched or not.\r\n   *\r\n   * @default `false`\r\n   */\r\n  dispatchConditionRejection?: boolean\r\n\r\n  serializeError?: (x: unknown) => GetSerializedErrorType<ThunkApiConfig>\r\n}\r\n\r\nexport type AsyncThunkPendingActionCreator<\r\n  ThunkArg\r\n> = ActionCreatorWithPreparedPayload<\r\n  [string, ThunkArg],\r\n  undefined,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'pending'\r\n  }\r\n>\r\n\r\nexport type AsyncThunkRejectedActionCreator<\r\n  ThunkArg,\r\n  ThunkApiConfig\r\n> = ActionCreatorWithPreparedPayload<\r\n  [Error | null, string, ThunkArg],\r\n  GetRejectValue<ThunkApiConfig> | undefined,\r\n  string,\r\n  GetSerializedErrorType<ThunkApiConfig>,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    rejectedWithValue: boolean\r\n    requestStatus: 'rejected'\r\n    aborted: boolean\r\n    condition: boolean\r\n  }\r\n>\r\n\r\nexport type AsyncThunkFulfilledActionCreator<\r\n  Returned,\r\n  ThunkArg\r\n> = ActionCreatorWithPreparedPayload<\r\n  [Returned, string, ThunkArg],\r\n  Returned,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'fulfilled'\r\n  }\r\n>\r\n\r\n/**\r\n * A type describing the return value of `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig> & {\r\n  pending: AsyncThunkPendingActionCreator<ThunkArg>\r\n  rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>\r\n  fulfilled: AsyncThunkFulfilledActionCreator<Returned, ThunkArg>\r\n  typePrefix: string\r\n}\r\n\r\n/**\r\n *\r\n * @param typePrefix\r\n * @param payloadCreator\r\n * @param options\r\n *\r\n * @public\r\n */\r\nexport function createAsyncThunk<\r\n  Returned,\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n>(\r\n  typePrefix: string,\r\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>,\r\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>\r\n): AsyncThunk<Returned, ThunkArg, ThunkApiConfig> {\r\n  type RejectedValue = GetRejectValue<ThunkApiConfig>\r\n\r\n  const fulfilled = createAction(\r\n    typePrefix + '/fulfilled',\r\n    (result: Returned, requestId: string, arg: ThunkArg) => {\r\n      return {\r\n        payload: result,\r\n        meta: {\r\n          arg,\r\n          requestId,\r\n          requestStatus: 'fulfilled' as const\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n  const pending = createAction(\r\n    typePrefix + '/pending',\r\n    (requestId: string, arg: ThunkArg) => {\r\n      return {\r\n        payload: undefined,\r\n        meta: {\r\n          arg,\r\n          requestId,\r\n          requestStatus: 'pending' as const\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n  const rejected = createAction(\r\n    typePrefix + '/rejected',\r\n    (error: Error | null, requestId: string, arg: ThunkArg) => {\r\n      const rejectedWithValue = error instanceof RejectWithValue\r\n      const aborted = !!error && error.name === 'AbortError'\r\n      const condition = !!error && error.name === 'ConditionError'\r\n\r\n      return {\r\n        payload: error instanceof RejectWithValue ? error.payload : undefined,\r\n        error: ((options && options.serializeError) || miniSerializeError)(\r\n          error || 'Rejected'\r\n        ) as GetSerializedErrorType<ThunkApiConfig>,\r\n        meta: {\r\n          arg,\r\n          requestId,\r\n          rejectedWithValue,\r\n          requestStatus: 'rejected' as const,\r\n          aborted,\r\n          condition\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n  let displayedWarning = false\r\n\r\n  const AC =\r\n    typeof AbortController !== 'undefined'\r\n      ? AbortController\r\n      : class implements AbortController {\r\n          signal: AbortSignal = {\r\n            aborted: false,\r\n            addEventListener() {},\r\n            dispatchEvent() {\r\n              return false\r\n            },\r\n            onabort() {},\r\n            removeEventListener() {}\r\n          }\r\n          abort() {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n              if (!displayedWarning) {\r\n                displayedWarning = true\r\n                console.info(\r\n                  `This platform does not implement AbortController. \r\nIf you want to use the AbortController to react to \\`abort\\` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.`\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n  function actionCreator(\r\n    arg: ThunkArg\r\n  ): AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> {\r\n    return (dispatch, getState, extra) => {\r\n      const requestId = nanoid()\r\n\r\n      const abortController = new AC()\r\n      let abortReason: string | undefined\r\n\r\n      const abortedPromise = new Promise<never>((_, reject) =>\r\n        abortController.signal.addEventListener('abort', () =>\r\n          reject({ name: 'AbortError', message: abortReason || 'Aborted' })\r\n        )\r\n      )\r\n\r\n      let started = false\r\n      function abort(reason?: string) {\r\n        if (started) {\r\n          abortReason = reason\r\n          abortController.abort()\r\n        }\r\n      }\r\n\r\n      const promise = (async function() {\r\n        let finalAction: ReturnType<typeof fulfilled | typeof rejected>\r\n        try {\r\n          if (\r\n            options &&\r\n            options.condition &&\r\n            options.condition(arg, { getState, extra }) === false\r\n          ) {\r\n            // eslint-disable-next-line no-throw-literal\r\n            throw {\r\n              name: 'ConditionError',\r\n              message: 'Aborted due to condition callback returning false.'\r\n            }\r\n          }\r\n          started = true\r\n          dispatch(pending(requestId, arg))\r\n          finalAction = await Promise.race([\r\n            abortedPromise,\r\n            Promise.resolve(\r\n              payloadCreator(arg, {\r\n                dispatch,\r\n                getState,\r\n                extra,\r\n                requestId,\r\n                signal: abortController.signal,\r\n                rejectWithValue(value: RejectedValue) {\r\n                  return new RejectWithValue(value)\r\n                }\r\n              })\r\n            ).then(result => {\r\n              if (result instanceof RejectWithValue) {\r\n                return rejected(result, requestId, arg)\r\n              }\r\n              return fulfilled(result, requestId, arg)\r\n            })\r\n          ])\r\n        } catch (err) {\r\n          finalAction = rejected(err, requestId, arg)\r\n        }\r\n        // We dispatch the result action _after_ the catch, to avoid having any errors\r\n        // here get swallowed by the try/catch block,\r\n        // per https://twitter.com/dan_abramov/status/770914221638942720\r\n        // and https://redux-toolkit.js.org/tutorials/advanced-tutorial#async-error-handling-logic-in-thunks\r\n\r\n        const skipDispatch =\r\n          options &&\r\n          !options.dispatchConditionRejection &&\r\n          rejected.match(finalAction) &&\r\n          finalAction.meta.condition\r\n\r\n        if (!skipDispatch) {\r\n          dispatch(finalAction)\r\n        }\r\n        return finalAction\r\n      })()\r\n      return Object.assign(promise, { abort, requestId, arg })\r\n    }\r\n  }\r\n\r\n  return Object.assign(\r\n    actionCreator as AsyncThunkActionCreator<\r\n      Returned,\r\n      ThunkArg,\r\n      ThunkApiConfig\r\n    >,\r\n    {\r\n      pending,\r\n      rejected,\r\n      fulfilled,\r\n      typePrefix\r\n    }\r\n  )\r\n}\r\n\r\ninterface UnwrappableAction {\r\n  payload: any\r\n  meta?: any\r\n  error?: any\r\n}\r\n\r\ntype UnwrappedActionPayload<T extends UnwrappableAction> = Exclude<\r\n  T,\r\n  { error: any }\r\n>['payload']\r\n\r\n/**\r\n * @public\r\n */\r\nexport function unwrapResult<R extends UnwrappableAction>(\r\n  action: R\r\n): UnwrappedActionPayload<R> {\r\n  if (action.meta && action.meta.rejectedWithValue) {\r\n    throw action.payload\r\n  }\r\n  if (action.error) {\r\n    throw action.error\r\n  }\r\n  return action.payload\r\n}\r\n\r\ntype WithStrictNullChecks<True, False> = undefined extends boolean\r\n  ? False\r\n  : True\r\n","import { Middleware } from 'redux'\r\n\r\n/**\r\n * return True if T is `any`, otherwise return False\r\n * taken from https://github.com/joonhocho/tsdef\r\n *\r\n * @internal\r\n */\r\nexport type IsAny<T, True, False = never> =\r\n  // test if we are going the left AND right path in the condition\r\n  true | false extends (T extends never ? true : false) ? True : False\r\n\r\n/**\r\n * return True if T is `unknown`, otherwise return False\r\n * taken from https://github.com/joonhocho/tsdef\r\n *\r\n * @internal\r\n */\r\nexport type IsUnknown<T, True, False = never> = unknown extends T\r\n  ? IsAny<T, False, True>\r\n  : False\r\n\r\nexport type FallbackIfUnknown<T, Fallback> = IsUnknown<T, Fallback, T>\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IfMaybeUndefined<P, True, False> = [undefined] extends [P]\r\n  ? True\r\n  : False\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IfVoid<P, True, False> = [void] extends [P] ? True : False\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IsEmptyObj<T, True, False = never> = T extends any\r\n  ? keyof T extends never\r\n    ? IsUnknown<T, False, IfMaybeUndefined<T, False, IfVoid<T, False, True>>>\r\n    : False\r\n  : never\r\n\r\n/**\r\n * returns True if TS version is above 3.5, False if below.\r\n * uses feature detection to detect TS version >= 3.5\r\n * * versions below 3.5 will return `{}` for unresolvable interference\r\n * * versions above will return `unknown`\r\n *\r\n * @internal\r\n */\r\nexport type AtLeastTS35<True, False> = [True, False][IsUnknown<\r\n  ReturnType<<T>() => T>,\r\n  0,\r\n  1\r\n>]\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IsUnknownOrNonInferrable<T, True, False> = AtLeastTS35<\r\n  IsUnknown<T, True, False>,\r\n  IsEmptyObj<T, True, IsUnknown<T, True, False>>\r\n>\r\n\r\n/**\r\n * Combines all dispatch signatures of all middlewares in the array `M` into\r\n * one intersected dispatch signature.\r\n */\r\nexport type DispatchForMiddlewares<M> = M extends ReadonlyArray<any>\r\n  ? UnionToIntersection<\r\n      M[number] extends infer MiddlewareValues\r\n        ? MiddlewareValues extends Middleware<infer DispatchExt, any, any>\r\n          ? DispatchExt extends Function\r\n            ? DispatchExt\r\n            : never\r\n          : never\r\n        : never\r\n    >\r\n  : never\r\n\r\n/**\r\n * Convert a Union type `(A|B)` to and intersecion type `(A&B)`\r\n */\r\nexport type UnionToIntersection<U> = (U extends any\r\n? (k: U) => void\r\n: never) extends (k: infer I) => void\r\n  ? I\r\n  : never\r\n\r\n/**\r\n * Helper type. Passes T out again, but boxes it in a way that it cannot\r\n * \"widen\" the type by accident if it is a generic that should be inferred\r\n * from elsewhere.\r\n *\r\n * @internal\r\n */\r\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\r\n\r\nexport type Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>\r\n\r\nexport interface HasMatchFunction<T> {\r\n  match(v: any): v is T\r\n}\r\n\r\nexport const hasMatchFunction = <T>(\r\n  v: Matcher<T>\r\n): v is HasMatchFunction<T> => {\r\n  return v && typeof (v as HasMatchFunction<T>).match === 'function'\r\n}\r\n\r\n/** @public */\r\nexport type Matcher<T> = HasMatchFunction<T> | ((v: any) => v is T)\r\n\r\n/** @public */\r\nexport type ActionFromMatcher<M extends Matcher<any>> = M extends Matcher<\r\n  infer T\r\n>\r\n  ? T\r\n  : never\r\n","import {\r\n  ActionFromMatcher,\r\n  hasMatchFunction,\r\n  Matcher,\r\n  UnionToIntersection\r\n} from './tsHelpers'\r\nimport {\r\n  AsyncThunk,\r\n  AsyncThunkFulfilledActionCreator,\r\n  AsyncThunkPendingActionCreator,\r\n  AsyncThunkRejectedActionCreator\r\n} from './createAsyncThunk'\r\n\r\n/** @public */\r\nexport type ActionMatchingAnyOf<\r\n  Matchers extends [Matcher<any>, ...Matcher<any>[]]\r\n> = ActionFromMatcher<Matchers[number]>\r\n\r\n/** @public */\r\nexport type ActionMatchingAllOf<\r\n  Matchers extends [Matcher<any>, ...Matcher<any>[]]\r\n> = UnionToIntersection<ActionMatchingAnyOf<Matchers>>\r\n\r\nconst matches = (matcher: Matcher<any>, action: any) => {\r\n  if (hasMatchFunction(matcher)) {\r\n    return matcher.match(action)\r\n  } else {\r\n    return matcher(action)\r\n  }\r\n}\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches any one of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAnyOf<Matchers extends [Matcher<any>, ...Matcher<any>[]]>(\r\n  ...matchers: Matchers\r\n) {\r\n  return (action: any): action is ActionMatchingAnyOf<Matchers> => {\r\n    return matchers.some(matcher => matches(matcher, action))\r\n  }\r\n}\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches all of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAllOf<Matchers extends [Matcher<any>, ...Matcher<any>[]]>(\r\n  ...matchers: Matchers\r\n) {\r\n  return (action: any): action is ActionMatchingAllOf<Matchers> => {\r\n    return matchers.every(matcher => matches(matcher, action))\r\n  }\r\n}\r\n\r\n/**\r\n * @param action A redux action\r\n * @param validStatus An array of valid meta.requestStatus values\r\n *\r\n * @internal\r\n */\r\nexport function hasExpectedRequestMetadata(action: any, validStatus: string[]) {\r\n  if (!action || !action.meta) return false\r\n\r\n  const hasValidRequestId = typeof action.meta.requestId === 'string'\r\n  const hasValidRequestStatus =\r\n    validStatus.indexOf(action.meta.requestStatus) > -1\r\n\r\n  return hasValidRequestId && hasValidRequestStatus\r\n}\r\n\r\nfunction isAsyncThunkArray(a: [any] | AnyAsyncThunk[]): a is AnyAsyncThunk[] {\r\n  return (\r\n    typeof a[0] === 'function' &&\r\n    'pending' in a[0] &&\r\n    'fulfilled' in a[0] &&\r\n    'rejected' in a[0]\r\n  )\r\n}\r\n\r\nexport type UnknownAsyncThunkPendingAction = ReturnType<\r\n  AsyncThunkPendingActionCreator<unknown>\r\n>\r\n\r\nexport type PendingActionFromAsyncThunk<\r\n  T extends AnyAsyncThunk\r\n> = ActionFromMatcher<T['pending']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is pending.\r\n *\r\n * @public\r\n */\r\nexport function isPending(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkPendingAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is pending.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isPending<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is PendingActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a pending thunk action\r\n * @public\r\n */\r\nexport function isPending(action: any): action is UnknownAsyncThunkPendingAction\r\nexport function isPending<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['pending'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isPending()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is PendingActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      asyncThunk => asyncThunk.pending\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkRejectedAction = ReturnType<\r\n  AsyncThunkRejectedActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type RejectedActionFromAsyncThunk<\r\n  T extends AnyAsyncThunk\r\n> = ActionFromMatcher<T['rejected']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is rejected.\r\n *\r\n * @public\r\n */\r\nexport function isRejected(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkRejectedAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is rejected.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isRejected<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is RejectedActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a rejected thunk action\r\n * @public\r\n */\r\nexport function isRejected(\r\n  action: any\r\n): action is UnknownAsyncThunkRejectedAction\r\nexport function isRejected<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['rejected'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isRejected()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      asyncThunk => asyncThunk.rejected\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkRejectedWithValueAction = ReturnType<\r\n  AsyncThunkRejectedActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type RejectedWithValueActionFromAsyncThunk<\r\n  T extends AnyAsyncThunk\r\n> = ActionFromMatcher<T['rejected']> &\r\n  (T extends AsyncThunk<any, any, { rejectValue: infer RejectedValue }>\r\n    ? { payload: RejectedValue }\r\n    : unknown)\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is rejected with value.\r\n *\r\n * @public\r\n */\r\nexport function isRejectedWithValue(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkRejectedAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is rejected with value.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isRejectedWithValue<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (\r\n  action: any\r\n) => action is RejectedWithValueActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a rejected thunk action with value\r\n * @public\r\n */\r\nexport function isRejectedWithValue(\r\n  action: any\r\n): action is UnknownAsyncThunkRejectedAction\r\nexport function isRejectedWithValue<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  const hasFlag = (action: any): action is any => {\r\n    return action && action.meta && action.meta.rejectedWithValue\r\n  }\r\n\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => {\r\n      const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag)\r\n\r\n      return combinedMatcher(action)\r\n    }\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isRejectedWithValue()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkFulfilledAction = ReturnType<\r\n  AsyncThunkFulfilledActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type FulfilledActionFromAsyncThunk<\r\n  T extends AnyAsyncThunk\r\n> = ActionFromMatcher<T['fulfilled']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is fulfilled.\r\n *\r\n * @public\r\n */\r\nexport function isFulfilled(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkFulfilledAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is fulfilled.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isFulfilled<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is FulfilledActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a fulfilled thunk action\r\n * @public\r\n */\r\nexport function isFulfilled(\r\n  action: any\r\n): action is UnknownAsyncThunkFulfilledAction\r\nexport function isFulfilled<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['fulfilled'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isFulfilled()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is FulfilledActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      asyncThunk => asyncThunk.fulfilled\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkAction =\r\n  | UnknownAsyncThunkPendingAction\r\n  | UnknownAsyncThunkRejectedAction\r\n  | UnknownAsyncThunkFulfilledAction\r\n\r\nexport type AnyAsyncThunk = AsyncThunk<any, any, any>\r\n\r\nexport type ActionsFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  | ActionFromMatcher<T['pending']>\r\n  | ActionFromMatcher<T['fulfilled']>\r\n  | ActionFromMatcher<T['rejected']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator.\r\n *\r\n * @public\r\n */\r\nexport function isAsyncThunkAction(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAsyncThunkAction<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is ActionsFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a thunk action\r\n * @public\r\n */\r\nexport function isAsyncThunkAction(\r\n  action: any\r\n): action is UnknownAsyncThunkAction\r\nexport function isAsyncThunkAction<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) =>\r\n      hasExpectedRequestMetadata(action, ['pending', 'fulfilled', 'rejected'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isAsyncThunkAction()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is ActionsFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = [] as any\r\n\r\n    for (const asyncThunk of asyncThunks) {\r\n      matchers.push(\r\n        asyncThunk.pending,\r\n        asyncThunk.rejected,\r\n        asyncThunk.fulfilled\r\n      )\r\n    }\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n","import { enableES5 } from 'immer'\r\nexport * from 'redux'\r\nexport {\r\n  default as createNextState,\r\n  Draft,\r\n  current,\r\n  freeze,\r\n  original,\r\n  isDraft\r\n} from 'immer'\r\nexport {\r\n  createSelector,\r\n  Selector,\r\n  OutputParametricSelector,\r\n  OutputSelector,\r\n  ParametricSelector\r\n} from 'reselect'\r\nexport { createDraftSafeSelector } from './createDraftSafeSelector'\r\nexport { ThunkAction, ThunkDispatch } from 'redux-thunk'\r\n\r\n// We deliberately enable Immer's ES5 support, on the grounds that\r\n// we assume RTK will be used with React Native and other Proxy-less\r\n// environments.  In addition, that's how Immer 4 behaved, and since\r\n// we want to ship this in an RTK minor, we should keep the same behavior.\r\nenableES5()\r\n\r\nexport {\r\n  // js\r\n  configureStore,\r\n  // types\r\n  ConfigureEnhancersCallback,\r\n  ConfigureStoreOptions,\r\n  EnhancedStore\r\n} from './configureStore'\r\nexport {\r\n  // js\r\n  createAction,\r\n  getType,\r\n  // types\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  ActionCreatorWithNonInferrablePayload,\r\n  ActionCreatorWithOptionalPayload,\r\n  ActionCreatorWithPayload,\r\n  ActionCreatorWithoutPayload,\r\n  ActionCreatorWithPreparedPayload,\r\n  PrepareAction\r\n} from './createAction'\r\nexport {\r\n  // js\r\n  createReducer,\r\n  // types\r\n  Actions,\r\n  CaseReducer,\r\n  CaseReducers\r\n} from './createReducer'\r\nexport {\r\n  // js\r\n  createSlice,\r\n  // types\r\n  CreateSliceOptions,\r\n  Slice,\r\n  CaseReducerActions,\r\n  SliceCaseReducers,\r\n  ValidateSliceCaseReducers,\r\n  CaseReducerWithPrepare,\r\n  SliceActionCreator\r\n} from './createSlice'\r\nexport {\r\n  // js\r\n  createImmutableStateInvariantMiddleware,\r\n  isImmutableDefault,\r\n  // types\r\n  ImmutableStateInvariantMiddlewareOptions\r\n} from './immutableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  createSerializableStateInvariantMiddleware,\r\n  findNonSerializableValue,\r\n  isPlain,\r\n  // types\r\n  SerializableStateInvariantMiddlewareOptions\r\n} from './serializableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  getDefaultMiddleware\r\n} from './getDefaultMiddleware'\r\nexport {\r\n  // types\r\n  ActionReducerMapBuilder\r\n} from './mapBuilders'\r\nexport { MiddlewareArray } from './utils'\r\n\r\nexport { createEntityAdapter } from './entities/create_adapter'\r\nexport {\r\n  Dictionary,\r\n  EntityState,\r\n  EntityAdapter,\r\n  EntitySelectors,\r\n  EntityStateAdapter,\r\n  EntityId,\r\n  Update,\r\n  IdSelector,\r\n  Comparer\r\n} from './entities/models'\r\n\r\nexport {\r\n  AsyncThunk,\r\n  AsyncThunkAction,\r\n  AsyncThunkPayloadCreatorReturnValue,\r\n  AsyncThunkPayloadCreator,\r\n  createAsyncThunk,\r\n  unwrapResult,\r\n  SerializedError\r\n} from './createAsyncThunk'\r\n\r\nexport {\r\n  // js\r\n  isAllOf,\r\n  isAnyOf,\r\n  isPending,\r\n  isRejected,\r\n  isFulfilled,\r\n  isAsyncThunkAction,\r\n  isRejectedWithValue,\r\n  // types\r\n  ActionMatchingAllOf,\r\n  ActionMatchingAnyOf\r\n} from './matchers'\r\n\r\nexport { nanoid } from './nanoid'\r\n\r\nexport { default as isPlainObject } from './isPlainObject'\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}